/****************************************************************************
 *
 *   FileName: XC9160_cfg_tbl.h
 *
 *   Author: Ola B.
 *
 *   Date: 
 *
 *   Description: XC9160 layer
 *
 ****************************************************************************/
#ifndef XC9160_CFG_TBL_H
#define XC9160_CFG_TBL_H

#include "inu_common.h"

#ifdef __cplusplus
   extern "C" {
#endif


/****************************************************************************
 ***************     G L O B A L        D E F N I T I O N S    **************
 ****************************************************************************/

const GEN_SENSOR_DRVG_regTblParamsT XC9160_ClockConfig_Camera_regs[] = 
{
    {0xfffd, 1, 0x80},            
    {0xfffe, 1, 0x50},
    {0x001c, 1, 0xdf}, 
    {0x001d, 1, 0x49},            
    {0x001e, 1, 0xee},
    {0x001f, 1, 0xff}, 
    {0x0018, 1, 0x00},            
    {0x0019, 1, 0x00},            
    {0x001a, 1, 0x00},
    {0x001b, 1, 0x00}, 
};


const GEN_SENSOR_DRVG_regTblParamsT XC9160_StreamConfig_Camera_regs[] = 
{
    {0x0030, 1, 0x84},
    {0x0031, 1, 0x58},
    {0x0032, 1, 0x34},
    {0x0033, 1, 0x70},
    {0x0020, 1, 0x02},
    {0x0021, 1, 0x0d},
    {0x0022, 1, 0x01},
    {0x0023, 1, 0x86},
    {0x0024, 1, 0x02},
    {0x0025, 1, 0x04},
    {0x0026, 1, 0x01},
    {0x0027, 1, 0x06},
    {0x0028, 1, 0x01},
    {0x0029, 1, 0x00},
    {0x002a, 1, 0x02},
    {0x002b, 1, 0x05},
    {0xfffe, 1, 0x50},
    {0x0050, 1, 0x0f},
    {0x0054, 1, 0x0f},
    {0x0058, 1, 0x00},
    {0x0058, 1, 0x03},
    {0xfffe, 1, 0x50},
    {0x00bc, 1, 0x19},
    {0x0090, 1, 0x38},  //image:0x38; colorbar:0x3a
    {0x0200, 1, 0x0f},   //mipi_rx1_pad_en
    {0x0201, 1, 0x00},
    {0x0202, 1, 0x80},
    {0x0203, 1, 0x00},
    {0xfffe, 1, 0x26},
    {0x8000, 1, 0x0d},   //colorbar0
    {0x8001, 1, 0x00},
    {0x8002, 1, 0x08},
    {0x8003, 1, 0x00},
    {0x8004, 1, 0x06},
    {0x8005, 1, 0x10},
    {0x8006, 1, 0x10},
    {0x8007, 1, 0x68},
    {0x8008, 1, 0x6a},
    {0x800b, 1, 0x00},            
    {0xfffe, 1, 0x26},
    {0x8012, 1, 0x00},   //crop0
    {0x8013, 1, 0x08},
    {0x8014, 1, 0x00},
    {0x8015, 1, 0x06},
    {0x8016, 1, 0x00},
    {0x8017, 1, 0x00},
    {0x8018, 1, 0x00},
    {0x8019, 1, 0x00},
    {0x8010, 1, 0x05},            
    {0xfffe, 1, 0x30},  //isp0
    {0x0000, 1, 0x01},
    {0x0001, 1, 0x10},
    {0x0002, 1, 0x10},
    {0x0003, 1, 0x20},
    {0x0004, 1, 0x10},            
    {0x0019, 1, 0x01},
    {0x0050, 1, 0x20},            
    {0x005e, 1, 0xff},
    {0x005f, 1, 0x07},
    {0x0060, 1, 0xff},
    {0x0061, 1, 0x05},
    {0x0064, 1, 0x00},
    {0x0065, 1, 0x05},
    {0x0066, 1, 0xc0},
    {0x0067, 1, 0x03},            
    {0x0006, 1, 0x08},
    {0x0007, 1, 0x00},
    {0x0008, 1, 0x06},
    {0x0009, 1, 0x00},
    {0x000a, 1, 0x05},
    {0x000b, 1, 0x00},
    {0x000c, 1, 0x03},
    {0x000d, 1, 0xc0},            
    {0x007e, 1, 0x05},
    {0x007f, 1, 0x00},
    {0x0080, 1, 0x03},
    {0x0081, 1, 0xc0},
    {0x0082, 1, 0x01},           
    {0xfffe, 1, 0x26},
    {0x0000, 1, 0x60},
    {0x0009, 1, 0xc4},   //mipi_rx_set            
    {0xfffe, 1, 0x26},
    {0x2019, 1, 0x05},   //mipi_tx
    {0x201a, 1, 0x00},
    {0x201b, 1, 0x03},
    {0x201c, 1, 0xc0},
    {0x201d, 1, 0x00},
    {0x201e, 1, 0x00},
    {0x201f, 1, 0x00},
    {0x2020, 1, 0x00},            
    {0x2015, 1, 0x80}, //0x80:continue mode;0x83:noncontinue mode
    {0x2017, 1, 0x1e},
    {0x2018, 1, 0x00},
    {0x2023, 1, 0x03},   //mipi_tx_set            
    {0xfffe, 1, 0x2c},  //stitch
    {0x0000, 1, 0x00},
    {0x0001, 1, 0x05},
    {0x0002, 1, 0x00},
    {0x0004, 1, 0x03},
    {0x0005, 1, 0xc0},
    {0x0008, 1, 0x10},            
    {0x0044, 1, 0x08},  //fifo0
    {0x0045, 1, 0x04},
    {0x0048, 1, 0x09},
    {0x0049, 1, 0xf0},            
    {0xfffe, 1, 0x2e},  //retiming
    {0x0001, 1, 0xee},
    {0x0003, 1, 0x00},
    {0x0004, 1, 0xa0},            
    {0xfffe, 1, 0x30},
    {0x006c, 1, 0x80},
    {0x1800, 1, 0x10},      
//bypass_on[]
    {0xfffd, 1, 0x80},
    {0xfffe, 1, 0x50},
    {0x004d, 1, 0x01},   
};

const GEN_SENSOR_DRVG_regTblParamsT OV13850mipi_default_regs[]  = 
{          
    {0x0100, 1, 0x00},
    {0x0102, 1, 0x01},           
    {0x0300, 1, 0x01},
    {0x0301, 1, 0x00},
    {0x0302, 1, 0x25},  //28
    {0x0303, 1, 0x00},
    {0x030a, 1, 0x01},  //01
    {0x300f, 1, 0x11},
    {0x3010, 1, 0x01},
    {0x3011, 1, 0x76},
    {0x3012, 1, 0x41},
    {0x3013, 1, 0x12},
    {0x3014, 1, 0x11},
    {0x301f, 1, 0x03},
    {0x3106, 1, 0x00},
    {0x3210, 1, 0x47},
    {0x3500, 1, 0x00},
    {0x3501, 1, 0x60},
    {0x3502, 1, 0x00},
    {0x3506, 1, 0x00},
    {0x3507, 1, 0x02},
    {0x3508, 1, 0x00},
    {0x350a, 1, 0x00},
    {0x350b, 1, 0x80},
    {0x350e, 1, 0x00},
    {0x350f, 1, 0x10},
    {0x351a, 1, 0x00},
    {0x351b, 1, 0x10},
    {0x351c, 1, 0x00},
    {0x351d, 1, 0x20},
    {0x351e, 1, 0x00},
    {0x351f, 1, 0x40},
    {0x3520, 1, 0x00},
    {0x3521, 1, 0x80},
    {0x3600, 1, 0xc0},
    {0x3601, 1, 0xfc},
    {0x3602, 1, 0x02},
    {0x3603, 1, 0x78},
    {0x3604, 1, 0xb1},
    {0x3605, 1, 0xb5},
    {0x3606, 1, 0x73},
    {0x3607, 1, 0x07},
    {0x3609, 1, 0x40},
    {0x360a, 1, 0x30},
    {0x360b, 1, 0x91},
    {0x360c, 1, 0x09},
    {0x360f, 1, 0x02},
    {0x3611, 1, 0x10},
    {0x3612, 1, 0x67},
    {0x3613, 1, 0x33},
    {0x3615, 1, 0x0c},
    {0x3616, 1, 0x0e},
    {0x3641, 1, 0x02},
    {0x3660, 1, 0x82},
    {0x3668, 1, 0x54},
    {0x3669, 1, 0x00},
    {0x366a, 1, 0x3f},
    {0x3667, 1, 0xa0},
    {0x3702, 1, 0x40},
    {0x3703, 1, 0x44},
    {0x3704, 1, 0x2c},
    {0x3705, 1, 0x01},
    {0x3706, 1, 0x15},
    {0x3707, 1, 0x44},
    {0x3708, 1, 0x3c},
    {0x3709, 1, 0x1f},
    {0x370a, 1, 0x27},
    {0x370b, 1, 0x3c},
    {0x3720, 1, 0x55},
    {0x3722, 1, 0x84},
    {0x3728, 1, 0x40},
    {0x372a, 1, 0x00},
    {0x372b, 1, 0x02},
    {0x372e, 1, 0x22},
    {0x372f, 1, 0x90},
    {0x3730, 1, 0x00},
    {0x3731, 1, 0x00},
    {0x3732, 1, 0x00},
    {0x3733, 1, 0x00},
    {0x3710, 1, 0x28},
    {0x3716, 1, 0x03},
    {0x3718, 1, 0x10},
    {0x3719, 1, 0x0c},
    {0x371a, 1, 0x08},
    {0x371c, 1, 0xfc},
    {0x3748, 1, 0x00},
    {0x3760, 1, 0x13},
    {0x3761, 1, 0x33},
    {0x3762, 1, 0x86},
    {0x3763, 1, 0x16},
    {0x3767, 1, 0x24},
    {0x3768, 1, 0x06},
    {0x3769, 1, 0x45},
    {0x376c, 1, 0x23},
    {0x376f, 1, 0x80},
    {0x3773, 1, 0x06},
    {0x3d84, 1, 0x00},
    {0x3d85, 1, 0x17},
    {0x3d8c, 1, 0x73},
    {0x3d8d, 1, 0xbf},
    {0x3800, 1, 0x00},
    {0x3801, 1, 0x08},
    {0x3802, 1, 0x00},
    {0x3803, 1, 0x04},
    {0x3804, 1, 0x10},
    {0x3805, 1, 0x97},
    {0x3806, 1, 0x0c},
    {0x3807, 1, 0x4b},
    {0x3808, 1, 0x08},
    {0x3809, 1, 0x40},
    {0x380a, 1, 0x06},
    {0x380b, 1, 0x20},
    {0x380c, 1, 0x09},
    {0x380d, 1, 0x60},
    {0x380e, 1, 0x06},
    {0x380f, 1, 0x80},
    {0x3810, 1, 0x00},
    {0x3811, 1, 0x04},
    {0x3812, 1, 0x00},
    {0x3813, 1, 0x02},
    {0x3814, 1, 0x31},
    {0x3815, 1, 0x31},
    {0x3820, 1, 0x02},
    {0x3821, 1, 0x06},
    {0x3823, 1, 0x00},
    {0x3826, 1, 0x00},
    {0x3827, 1, 0x02},
    {0x3834, 1, 0x00},
    {0x3835, 1, 0x1c},
    {0x3836, 1, 0x08},
    {0x3837, 1, 0x02},
    {0x4000, 1, 0xf1},
    {0x4001, 1, 0x00},
    {0x4006, 1, 0x04},
    {0x4007, 1, 0x04},
    {0x400b, 1, 0x0c},
    {0x4011, 1, 0x00},
    {0x401a, 1, 0x00},
    {0x401b, 1, 0x00},
    {0x401c, 1, 0x00},
    {0x401d, 1, 0x00},
    {0x4020, 1, 0x00},
    {0x4021, 1, 0xe4},
    {0x4022, 1, 0x04},
    {0x4023, 1, 0xd7},
    {0x4024, 1, 0x05},
    {0x4025, 1, 0xbc},
    {0x4026, 1, 0x05},
    {0x4027, 1, 0xbf},
    {0x4028, 1, 0x00},
    {0x4029, 1, 0x02},
    {0x402a, 1, 0x04},
    {0x402b, 1, 0x08},
    {0x402c, 1, 0x02},
    {0x402d, 1, 0x02},
    {0x402e, 1, 0x0c},
    {0x402f, 1, 0x08},
    {0x403d, 1, 0x2c},
    {0x403f, 1, 0x7f},
    {0x4041, 1, 0x07},
    {0x4500, 1, 0x82},
    {0x4501, 1, 0x3c},
    {0x458b, 1, 0x00},
    {0x459c, 1, 0x00},
    {0x459d, 1, 0x00},
    {0x459e, 1, 0x00},
    {0x4601, 1, 0x83},
    {0x4602, 1, 0x22},
    {0x4603, 1, 0x01},
    {0x4837, 1, 0x19},
    {0x4d00, 1, 0x04},
    {0x4d01, 1, 0x42},
    {0x4d02, 1, 0xd1},
    {0x4d03, 1, 0x90},
    {0x4d04, 1, 0x66},
    {0x4d05, 1, 0x65},
    {0x4d0b, 1, 0x00},
    {0x5000, 1, 0x0e},
    {0x5001, 1, 0x01},
    {0x5002, 1, 0x07},
    {0x5013, 1, 0x40},
    {0x501c, 1, 0x00},
    {0x501d, 1, 0x10},
    {0x510f, 1, 0xfc},
    {0x5110, 1, 0xf0},
    {0x5111, 1, 0x10},
    {0x536d, 1, 0x02},
    {0x536e, 1, 0x67},
    {0x536f, 1, 0x01},
    {0x5370, 1, 0x4c},
    {0x5400, 1, 0x00},
    {0x5400, 1, 0x00},
    {0x5401, 1, 0x61},
    {0x5402, 1, 0x00},
    {0x5403, 1, 0x00},
    {0x5404, 1, 0x00},
    {0x5405, 1, 0x40},
    {0x540c, 1, 0x05},
    {0x5501, 1, 0x00},
    {0x5b00, 1, 0x00},
    {0x5b01, 1, 0x00},
    {0x5b02, 1, 0x01},
    {0x5b03, 1, 0xff},
    {0x5b04, 1, 0x02},
    {0x5b05, 1, 0x6c},
    {0x5b09, 1, 0x02},
    {0x5e00, 1, 0x00},
    {0x5e10, 1, 0x1c},            
    {0x4005, 1, 0x00},
    {0x0100, 1, 0x01}, 

};

const GEN_SENSOR_DRVG_regTblParamsT XC9160_IQ_regs[] = 
{          

//bypass_off []             
    {0xfffd, 1, 0x80},
    {0xfffe, 1, 0x50},
    {0x004d, 1, 0x00},          
//XC9160_IQ  _regs[]
    //BLC 
    {0xfffe, 1, 0x30},
    {0x0013, 1, 0x00},//bias
    {0x0014, 1, 0x00},
    {0x071b, 1, 0x00},//blc
    //AE     
    {0xfffe, 1, 0x30},
    {0x1f00, 1, 0x00},   // WIN start X
    {0x1f01, 1, 0x00},
    {0x1f02, 1, 0x00},   // WIN stat Y
    {0x1f03, 1, 0x00},
    {0x1f04, 1, 0x08},   // WIN width
    {0x1f05, 1, 0x00},
    {0x1f06, 1, 0x06},   // WIN height
    {0x1f07, 1, 0x00},
    {0x1f08, 1, 0x03},       
    {0x0051, 1, 0x01},     //统计数据在gamma之后    {        
    {0xfffe, 1, 0x25},
    {0x0002, 1, 0x40},    //i2c速度调整，速度过快AE闪烁       
    //SENSOR
    {0xfffe, 1, 0x14},
    {0x000e, 1, 0x00},   //Isp0 Used I2c
    {0x010e, 1, 0x20},      //camera i2c id
    {0x010f, 1, 0x01},      //camera i2c bits
    {0x0110, 1, 0x00},      //sensor type gain
    {0x0111, 1, 0x00},      //sensor type exposure
    {0x0113, 1, 0x01},    //gain select            
    //exposure     
    {0x0114, 1, 0x35},  //write camera exposure variable [19:16]
    {0x0115, 1, 0x00},
    {0x0116, 1, 0x35},  //write camera exposure variable [15:8]
    {0x0117, 1, 0x01},
    {0x0118, 1, 0x35},  //write camera exposure variable [7:0]
    {0x0119, 1, 0x02},
    {0x011c, 1, 0x00},  //camera exposure addr mask 1
    {0x011d, 1, 0xff},
    {0x011e, 1, 0x00},  //camera exposure addr mask 2
    {0x011f, 1, 0xff},
    {0x0120, 1, 0x00},  //camera exposure addr mask 3
    {0x0121, 1, 0xff},            
    //gain          
    {0x0134, 1, 0x35},  //camera gain addr
    {0x0135, 1, 0x0a},
    {0x0136, 1, 0x35},  //camera gain addr
    {0x0137, 1, 0x0b},
    {0x013c, 1, 0x00},  //camera gain addr mask 1
    {0x013d, 1, 0xff},
    {0x013e, 1, 0x00},  //camera gain addr mask 2
    {0x013f, 1, 0xff},           
    //AE START
    {0x004c, 1, 0x00},
    {0x002b, 1, 0x01},    //  ae enable
    {0x004d, 1, 0x01},    //  ae Force write
    {0x00fa, 1, 0x01},
    {0x00fb, 1, 0xf0},   //max gain
    {0x00fc, 1, 0x00},
    {0x00fd, 1, 0x20},   //min gain       
    {0x00e2, 1, 0x68},   //max exp
    {0x00e3, 1, 0x00},     
    {0x00de, 1, 0x00},
    {0x00df, 1, 0x10},   //min exp      
    {0x00a0, 1, 0x01},    //day target
    {0x00a1, 1, 0x20},
    {0x0104, 1, 0x02},
    {0x0105, 1, 0x01},
    {0x0106, 1, 0x1a},
    {0x0107, 1, 0x00},
    {0x0108, 1, 0x1f},
    {0x0109, 1, 0x30},   //flicker            
    {0x0144, 1, 0x01},    //exp delay
    {0x0145, 1, 0x01},    //gain delay           
    {0x0055, 1, 0x04},
    {0x0056, 1, 0x04},
    {0x0057, 1, 0x08},
    {0x0058, 1, 0x04},
    {0x0059, 1, 0x04},
    {0x005a, 1, 0x04},
    {0x005b, 1, 0x08},
    {0x005c, 1, 0x10},
    {0x005d, 1, 0x08},
    {0x005e, 1, 0x04},
    {0x005f, 1, 0x08},
    {0x0060, 1, 0x10},
    {0x0061, 1, 0x20},
    {0x0062, 1, 0x10},
    {0x0063, 1, 0x08},
    {0x0064, 1, 0x04},
    {0x0065, 1, 0x08},
    {0x0066, 1, 0x10},
    {0x0067, 1, 0x08},
    {0x0068, 1, 0x04},
    {0x0069, 1, 0x04},
    {0x006a, 1, 0x04},
    {0x006b, 1, 0x08},
    {0x006c, 1, 0x04},
    {0x006d, 1, 0x04},
    {0x0088, 1, 0x00},
    {0x0089, 1, 0x07},
    {0x008a, 1, 0x7d},
    {0x008b, 1, 0xc0},   //weight
    {0x0050, 1, 0x01},   //refresh
    //AE SPEED      
    {0x00c6, 1, 0x01},     // delay frame
    {0x00c7, 1, 0x18},    //3. finally thr
    {0x00ca, 1, 0x00},    //1. threshold low
    {0x00cb, 1, 0x60},
    {0x00cc, 1, 0x00},    //2. threshold high
    {0x00cd, 1, 0x80},
    {0x01bc, 1, 0x00},   
    {0x01bd, 1, 0x60},   //thr_l_all
    {0x01be, 1, 0x00},
    {0x01bf, 1, 0x40},   //thr_l_avg
    {0x00d8, 1, 0x80},    //4.stable thr_h
    {0x00c8, 1, 0x01},     //total speed
    {0x0208, 1, 0x02},   //limint speed                
    {0x00da, 1, 0x00},
    {0x00db, 1, 0x80},    //lumadiffthrlow
    {0x00dc, 1, 0x03},
    {0x00dd, 1, 0x00},    //lumadiffthrhigh
    //smart ae
    {0x0092, 1, 0x00},
    {0x0093, 1, 0x00},
    {0x0094, 1, 0x00},
    {0x0095, 1, 0x00},
    {0x00ad, 1, 0x04},   //ATT block Cnt
    {0x01c0, 1, 0x06},   //PDF_H used cnt to calc
    {0x01d0, 1, 0x01},  //overExpRefBL
    //Table        
    //Exposure value
    {0x0022, 1, 0x0f},
    {0x01e4, 1, 0x00},   // Exp value Table
    {0x01e5, 1, 0x00},
    {0x01e6, 1, 0x0c},
    {0x01e7, 1, 0x00},  //table0
    {0x01e8, 1, 0x00},
    {0x01e9, 1, 0x00},
    {0x01ea, 1, 0x30},
    {0x01eb, 1, 0x00},   //table1
    {0x01ec, 1, 0x00},
    {0x01ed, 1, 0x00},
    {0x01ee, 1, 0xc0},
    {0x01ef, 1, 0x00},    //table2
    {0x01f0, 1, 0x00},
    {0x01f1, 1, 0x03},
    {0x01f2, 1, 0x00},
    {0x01f3, 1, 0x00},    //table3
    {0x01f4, 1, 0x00},
    {0x01f5, 1, 0x0c},
    {0x01f6, 1, 0x00},
    {0x01f7, 1, 0x00},   //table4
    {0x01f8, 1, 0x00},
    {0x01f9, 1, 0x30},
    {0x01fa, 1, 0x00},
    {0x01fb, 1, 0x00},  //table5
    //ref target
    {0x00b2, 1, 0x02},   // ref target table  0
    {0x00b3, 1, 0x40},
    {0x00b4, 1, 0x02},   // ref target table  1
    {0x00b5, 1, 0x00},
    {0x00b6, 1, 0x02},   // ref target table  2
    {0x00b7, 1, 0x00},
    {0x00b8, 1, 0x01},   // ref target table  3
    {0x00b9, 1, 0xf0},
    {0x00ba, 1, 0x01},   // ref target table  4
    {0x00bb, 1, 0xc0},
    {0x00bc, 1, 0x01},   // ref target table  5
    {0x00bd, 1, 0x80},
    //over exposure offset table
    {0x01d6, 1, 0x06},
    {0x01d7, 1, 0x0a},
    {0x01d8, 1, 0x14},
    {0x01d9, 1, 0x20},
    {0x01da, 1, 0x28},
    {0x01db, 1, 0x30},
    //main bodyratio table
    {0x01dc, 1, 0x40},
    {0x01dd, 1, 0x30},
    {0x01de, 1, 0x20},
    {0x01df, 1, 0x10},
    {0x01e0, 1, 0x00},
    {0x01e1, 1, 0x00},
    //  AVG
    {0x01cd, 1, 0x28},  // avg affect val
    {0x01cb, 1, 0x00},  // avg thr_l
    {0x01cc, 1, 0x60},  // avg thr_h
    //  Variance
    {0x01b1, 1, 0x30},  // variance affect
    {0x01b2, 1, 0x01},  // thr l
    {0x01b3, 1, 0x00},
    {0x01b4, 1, 0x08},  // thr h
    {0x01b5, 1, 0x00},
    ///////////////////////  PDFH ///////////////////
    {0x01c7, 1, 0x06},   // PDFH_MAX
    {0x01c9, 1, 0x02},   // PDFH_Target
    {0x01d1, 1, 0x40},   // OE affect 0
    {0x01ca, 1, 0x50},   // OE affect 1
    //////////////////  BRIGHT RATIO /////////////////
    {0x021d, 1, 0x04},   //PDFH_Brighten_thr
    {0x01b7, 1, 0x00},   //bright_pdfh_diff thr_l
    {0x01b8, 1, 0x30},  //bright_pdfh_diff thr_m
    {0x01ba, 1, 0x20},  //bright affect ratio
    {0x00a6, 1, 0x32}, // CDF_H
    {0x00a7, 1, 0x20}, // CDF_L
    {0x01c6, 1, 0x30}, // nPDF_L Target
    {0x01d2, 1, 0x08}, //hist under exp affect ratio
    {0x01b0, 1, 0x40}, //PDF_L brighten max
    ///////////////////  ATT BLOCK LIMIT /////////////////
    {0x016e, 1, 0x02},
    {0x016f, 1, 0x80},  //Max ATT thrshold
    {0x016c, 1, 0x00},
    {0x016d, 1, 0x00},
    {0x01d3, 1, 0x00},   // Att limit ratio L
    {0x01d4, 1, 0x08},   // Att limit ratio H
    //////////////////// BLOCK LIMIT /////////////////////
    {0x016a, 1, 0x03},  //MAX avg thrshold
    {0x016b, 1, 0x00},
    {0x01d5, 1, 0x10},  // global limit ratio
    /////////////// ADJUST STABE THR IN AF ///////////////
    {0x0212, 1, 0x01},   // enable switch avg stable thr
    {0x0215, 1, 0x28},  // global avg diff thr normal
    {0x0217, 1, 0x48},  // global avg diff thr for AF
    {0x0219, 1, 0x80},  // global all diff thr normal,look in d8
    {0x021b, 1, 0xff},  // global all diff thr for AF,look in d8
    //////////////////// DEBUG   /////////////////////
    {0x020b, 1, 0x40},   //b2d stable buff
    {0x020d, 1, 0x03},    //b2d speed limit max cnt,0 means disable
    {0x0220, 1, 0x00},
    {0x0221, 1, 0xff},   //HistLimitDarkenMaxVal,according 27(15%)
    //AE START  END 
    //ISP0 AutoLenc 
    {0xfffe, 1, 0x30},    //lenc scale  4208x3120
    {0x03ca, 1, 0x0c},
    {0x03cb, 1, 0x00},
    {0x03cc, 1, 0x10},
    {0x03cd, 1, 0x00},
    {0x03ce, 1, 0x0c},
    {0x03cf, 1, 0x00},
    {0x03d0, 1, 0x08},
    {0x03d1, 1, 0x00},
    {0xfffe, 1, 0x14},
    {0x002c, 1, 0x01},
    {0x0030, 1, 0x01},
    {0x0620, 1, 0x01},
    {0x0621, 1, 0x01}, 
    {0xfffe, 1, 0x14},
    {0x0928, 1, 0x00},  //ct
    {0x0929, 1, 0x77},
    {0x092a, 1, 0x00},
    {0x092b, 1, 0xc2},
    {0x092c, 1, 0x01},
    {0x092d, 1, 0x3c},
    {0xfffe, 1, 0x14},
    {0x06e5, 1, 0x3f},  //A _95% 20170830
    {0x06e6, 1, 0x3e},
    {0x06e7, 1, 0x2d},
    {0x06e8, 1, 0x27},
    {0x06e9, 1, 0x27},
    {0x06ea, 1, 0x2e},
    {0x06eb, 1, 0x3f},
    {0x06ec, 1, 0x3f},
    {0x06ed, 1, 0x2d},
    {0x06ee, 1, 0x1d},
    {0x06ef, 1, 0x16},
    {0x06f0, 1, 0x13},
    {0x06f1, 1, 0x13},
    {0x06f2, 1, 0x16},
    {0x06f3, 1, 0x1d},
    {0x06f4, 1, 0x2e},
    {0x06f5, 1, 0x1b},
    {0x06f6, 1, 0x12},
    {0x06f7, 1, 0xb },
    {0x06f8, 1, 0x7 },
    {0x06f9, 1, 0x7 },
    {0x06fa, 1, 0xb },
    {0x06fb, 1, 0x11},
    {0x06fc, 1, 0x1a},
    {0x06fd, 1, 0x15},
    {0x06fe, 1, 0xb },
    {0x06ff, 1, 0x3 },
    {0x0700, 1, 0x0 },
    {0x0701, 1, 0x0 },
    {0x0702, 1, 0x3 },
    {0x0703, 1, 0xb },
    {0x0704, 1, 0x14},
    {0x0705, 1, 0x16},
    {0x0706, 1, 0xb },
    {0x0707, 1, 0x4 },
    {0x0708, 1, 0x0 },
    {0x0709, 1, 0x0 },
    {0x070a, 1, 0x3 },
    {0x070b, 1, 0xb },
    {0x070c, 1, 0x14},
    {0x070d, 1, 0x1b},
    {0x070e, 1, 0x12},
    {0x070f, 1, 0xb },
    {0x0710, 1, 0x7 },
    {0x0711, 1, 0x7 },
    {0x0712, 1, 0xb },
    {0x0713, 1, 0x11},
    {0x0714, 1, 0x1b},
    {0x0715, 1, 0x2e},
    {0x0716, 1, 0x1e},
    {0x0717, 1, 0x17},
    {0x0718, 1, 0x14},
    {0x0719, 1, 0x14},
    {0x071a, 1, 0x16},
    {0x071b, 1, 0x1e},
    {0x071c, 1, 0x2e},
    {0x071d, 1, 0x3f},
    {0x071e, 1, 0x3e},
    {0x071f, 1, 0x2d},
    {0x0720, 1, 0x28},
    {0x0721, 1, 0x28},
    {0x0722, 1, 0x2e},
    {0x0723, 1, 0x3e},
    {0x0724, 1, 0x3f},
    {0x0725, 1, 0x20},
    {0x0726, 1, 0x21},
    {0x0727, 1, 0x1f},
    {0x0728, 1, 0x21},
    {0x0729, 1, 0x20},
    {0x072a, 1, 0x22},
    {0x072b, 1, 0x22},
    {0x072c, 1, 0x1c},
    {0x072d, 1, 0x1f},
    {0x072e, 1, 0x1e},
    {0x072f, 1, 0x20},
    {0x0730, 1, 0x21},
    {0x0731, 1, 0x22},
    {0x0732, 1, 0x21},
    {0x0733, 1, 0x20},
    {0x0734, 1, 0x21},
    {0x0735, 1, 0x1f},
    {0x0736, 1, 0x1f},
    {0x0737, 1, 0x1f},    
    {0x0738, 1, 0x20},    
    {0x0739, 1, 0x20},    
    {0x073a, 1, 0x21},
    {0x073b, 1, 0x21},
    {0x073c, 1, 0x20},
    {0x073d, 1, 0x20},
    {0x073e, 1, 0x1f},
    {0x073f, 1, 0x1f},
    {0x0740, 1, 0x20},
    {0x0741, 1, 0x21},
    {0x0742, 1, 0x21},
    {0x0743, 1, 0x21},
    {0x0744, 1, 0x21},
    {0x0745, 1, 0x1f},
    {0x0746, 1, 0x1f},
    {0x0747, 1, 0x1f},
    {0x0748, 1, 0x1f},
    {0x0749, 1, 0x20},
    {0x074a, 1, 0x21},
    {0x074b, 1, 0x21},
    {0x074c, 1, 0x21},
    {0x074d, 1, 0x1f},
    {0x074e, 1, 0x1e},
    {0x074f, 1, 0x1e},
    {0x0750, 1, 0x1f},
    {0x0751, 1, 0x20},
    {0x0752, 1, 0x20},
    {0x0753, 1, 0x20},
    {0x0754, 1, 0x1f},
    {0x0755, 1, 0x1f},
    {0x0756, 1, 0x1e},
    {0x0757, 1, 0x20},
    {0x0758, 1, 0x20},
    {0x0759, 1, 0x21},
    {0x075a, 1, 0x21},
    {0x075b, 1, 0x1f},
    {0x075c, 1, 0x20},
    {0x075d, 1, 0x1e},
    {0x075e, 1, 0x20},
    {0x075f, 1, 0x1f},
    {0x0760, 1, 0x1e},
    {0x0761, 1, 0x1e},
    {0x0762, 1, 0x1f},
    {0x0763, 1, 0x21},
    {0x0764, 1, 0x1f},
    {0x0765, 1, 0x29},
    {0x0766, 1, 0x29},
    {0x0767, 1, 0x28},
    {0x0768, 1, 0x28},
    {0x0769, 1, 0x28},
    {0x076a, 1, 0x29},
    {0x076b, 1, 0x29},
    {0x076c, 1, 0x2b},
    {0x076d, 1, 0x29},
    {0x076e, 1, 0x28},
    {0x076f, 1, 0x28},
    {0x0770, 1, 0x29},
    {0x0771, 1, 0x29},
    {0x0772, 1, 0x28},
    {0x0773, 1, 0x29},
    {0x0774, 1, 0x29},
    {0x0775, 1, 0x27},
    {0x0776, 1, 0x27},
    {0x0777, 1, 0x25},
    {0x0778, 1, 0x24},
    {0x0779, 1, 0x24},
    {0x077a, 1, 0x25},
    {0x077b, 1, 0x27},
    {0x077c, 1, 0x28},
    {0x077d, 1, 0x27},
    {0x077e, 1, 0x25},
    {0x077f, 1, 0x22},
    {0x0780, 1, 0x20},
    {0x0781, 1, 0x20},
    {0x0782, 1, 0x21},
    {0x0783, 1, 0x26},
    {0x0784, 1, 0x27},
    {0x0785, 1, 0x27},
    {0x0786, 1, 0x25},
    {0x0787, 1, 0x21},
    {0x0788, 1, 0x20},
    {0x0789, 1, 0x20},
    {0x078a, 1, 0x22},
    {0x078b, 1, 0x26},
    {0x078c, 1, 0x28},
    {0x078d, 1, 0x27},
    {0x078e, 1, 0x27},
    {0x078f, 1, 0x25},
    {0x0790, 1, 0x23},
    {0x0791, 1, 0x24},
    {0x0792, 1, 0x25},
    {0x0793, 1, 0x27},
    {0x0794, 1, 0x28},
    {0x0795, 1, 0x28},
    {0x0796, 1, 0x28},
    {0x0797, 1, 0x27},
    {0x0798, 1, 0x27},
    {0x0799, 1, 0x28},
    {0x079a, 1, 0x28},
    {0x079b, 1, 0x28},
    {0x079c, 1, 0x29},
    {0x079d, 1, 0x29},
    {0x079e, 1, 0x29},
    {0x079f, 1, 0x28},
    {0x07a0, 1, 0x28},
    {0x07a1, 1, 0x28},
    {0x07a2, 1, 0x28},
    {0x07a3, 1, 0x29},
    {0x07a4, 1, 0x2a},
    {0x07a5, 1, 0x3f},        //c_95% 20170830
    {0x07a6, 1, 0x3b},
    {0x07a7, 1, 0x2b},
    {0x07a8, 1, 0x25},
    {0x07a9, 1, 0x25},
    {0x07aa, 1, 0x2c},
    {0x07ab, 1, 0x3d},
    {0x07ac, 1, 0x3f},
    {0x07ad, 1, 0x2b},
    {0x07ae, 1, 0x1c},
    {0x07af, 1, 0x15},
    {0x07b0, 1, 0x12},
    {0x07b1, 1, 0x12},
    {0x07b2, 1, 0x15},
    {0x07b3, 1, 0x1b},
    {0x07b4, 1, 0x2c},
    {0x07b5, 1, 0x1a},
    {0x07b6, 1, 0x11},
    {0x07b7, 1, 0xb },
    {0x07b8, 1, 0x6 },
    {0x07b9, 1, 0x6 },
    {0x07ba, 1, 0xa },
    {0x07bb, 1, 0x10},
    {0x07bc, 1, 0x18},
    {0x07bd, 1, 0x14},
    {0x07be, 1, 0xb },
    {0x07bf, 1, 0x3 },
    {0x07c0, 1, 0x0 },
    {0x07c1, 1, 0x0 },
    {0x07c2, 1, 0x3 },
    {0x07c3, 1, 0xa },
    {0x07c4, 1, 0x13},
    {0x07c5, 1, 0x15},
    {0x07c6, 1, 0xb },
    {0x07c7, 1, 0x4 },
    {0x07c8, 1, 0x0 },
    {0x07c9, 1, 0x0 },
    {0x07ca, 1, 0x3 },
    {0x07cb, 1, 0xa },
    {0x07cc, 1, 0x13},
    {0x07cd, 1, 0x1a},
    {0x07ce, 1, 0x11},
    {0x07cf, 1, 0xb },
    {0x07d0, 1, 0x7 },
    {0x07d1, 1, 0x7 },
    {0x07d2, 1, 0xa },
    {0x07d3, 1, 0x10},
    {0x07d4, 1, 0x19},
    {0x07d5, 1, 0x2c},
    {0x07d6, 1, 0x1d},
    {0x07d7, 1, 0x16},
    {0x07d8, 1, 0x13},
    {0x07d9, 1, 0x12},
    {0x07da, 1, 0x15},
    {0x07db, 1, 0x1d},
    {0x07dc, 1, 0x2c},
    {0x07dd, 1, 0x3f},
    {0x07de, 1, 0x3b},
    {0x07df, 1, 0x2b},
    {0x07e0, 1, 0x27},
    {0x07e1, 1, 0x27},
    {0x07e2, 1, 0x2c},
    {0x07e3, 1, 0x3c},
    {0x07e4, 1, 0x3f},
    {0x07e5, 1, 0x1b},
    {0x07e6, 1, 0x1d},
    {0x07e7, 1, 0x1a},
    {0x07e8, 1, 0x1b},
    {0x07e9, 1, 0x1b},
    {0x07ea, 1, 0x1c},
    {0x07eb, 1, 0x1d},
    {0x07ec, 1, 0x17},
    {0x07ed, 1, 0x1b},
    {0x07ee, 1, 0x1a},
    {0x07ef, 1, 0x1c},
    {0x07f0, 1, 0x1c},
    {0x07f1, 1, 0x1d},
    {0x07f2, 1, 0x1c},
    {0x07f3, 1, 0x1b},
    {0x07f4, 1, 0x1d},
    {0x07f5, 1, 0x1b},
    {0x07f6, 1, 0x1b},
    {0x07f7, 1, 0x1c},
    {0x07f8, 1, 0x1d},
    {0x07f9, 1, 0x1d},
    {0x07fa, 1, 0x1d},
    {0x07fb, 1, 0x1d},
    {0x07fc, 1, 0x1c},
    {0x07fd, 1, 0x1c},
    {0x07fe, 1, 0x1c},
    {0x07ff, 1, 0x1d},
    {0x0800, 1, 0x20},
    {0x0801, 1, 0x21},
    {0x0802, 1, 0x1f},
    {0x0803, 1, 0x1d},
    {0x0804, 1, 0x1d},
    {0x0805, 1, 0x1c},
    {0x0806, 1, 0x1c},
    {0x0807, 1, 0x1e},
    {0x0808, 1, 0x20},
    {0x0809, 1, 0x20},
    {0x080a, 1, 0x1e},
    {0x080b, 1, 0x1d},
    {0x080c, 1, 0x1d},
    {0x080d, 1, 0x1a},
    {0x080e, 1, 0x1b},
    {0x080f, 1, 0x1b},
    {0x0810, 1, 0x1c},
    {0x0811, 1, 0x1d},
    {0x0812, 1, 0x1d},
    {0x0813, 1, 0x1c},
    {0x0814, 1, 0x1b},
    {0x0815, 1, 0x1b},
    {0x0816, 1, 0x1a},
    {0x0817, 1, 0x1b},
    {0x0818, 1, 0x1c},
    {0x0819, 1, 0x1c},
    {0x081a, 1, 0x1c},
    {0x081b, 1, 0x1b},
    {0x081c, 1, 0x1b},
    {0x081d, 1, 0x18},
    {0x081e, 1, 0x1b},
    {0x081f, 1, 0x1a},
    {0x0820, 1, 0x19},
    {0x0821, 1, 0x1a},
    {0x0822, 1, 0x1a},
    {0x0823, 1, 0x1c},
    {0x0824, 1, 0x1b},
    {0x0825, 1, 0x1f},
    {0x0826, 1, 0x1f},
    {0x0827, 1, 0x1f},
    {0x0828, 1, 0x20},
    {0x0829, 1, 0x20},
    {0x082a, 1, 0x20},
    {0x082b, 1, 0x1f},
    {0x082c, 1, 0x21},
    {0x082d, 1, 0x1f},
    {0x082e, 1, 0x1f},
    {0x082f, 1, 0x1f},
    {0x0830, 1, 0x1e},
    {0x0831, 1, 0x1e},
    {0x0832, 1, 0x1f},
    {0x0833, 1, 0x1f},
    {0x0834, 1, 0x1f},
    {0x0835, 1, 0x1e},
    {0x0836, 1, 0x1d},
    {0x0837, 1, 0x1e},
    {0x0838, 1, 0x1f},
    {0x0839, 1, 0x1f},
    {0x083a, 1, 0x1e},
    {0x083b, 1, 0x1e},
    {0x083c, 1, 0x1f},
    {0x083d, 1, 0x1d},
    {0x083e, 1, 0x1d},
    {0x083f, 1, 0x1f},
    {0x0840, 1, 0x20},
    {0x0841, 1, 0x20},
    {0x0842, 1, 0x1f},
    {0x0843, 1, 0x1e},
    {0x0844, 1, 0x1e},
    {0x0845, 1, 0x1d},
    {0x0846, 1, 0x1d},
    {0x0847, 1, 0x1e},
    {0x0848, 1, 0x20},
    {0x0849, 1, 0x20},
    {0x084a, 1, 0x1f},
    {0x084b, 1, 0x1e},
    {0x084c, 1, 0x1e},
    {0x084d, 1, 0x1d},
    {0x084e, 1, 0x1d},
    {0x084f, 1, 0x1e},
    {0x0850, 1, 0x1e},
    {0x0851, 1, 0x1e},
    {0x0852, 1, 0x1e},
    {0x0853, 1, 0x1e},
    {0x0854, 1, 0x1e},
    {0x0855, 1, 0x1e},
    {0x0856, 1, 0x1e},
    {0x0857, 1, 0x1d},
    {0x0858, 1, 0x1d},
    {0x0859, 1, 0x1d},
    {0x085a, 1, 0x1e},
    {0x085b, 1, 0x1f},
    {0x085c, 1, 0x1f},
    {0x085d, 1, 0x1f},
    {0x085e, 1, 0x1f},
    {0x085f, 1, 0x1e},
    {0x0860, 1, 0x1f},
    {0x0861, 1, 0x1f},
    {0x0862, 1, 0x1f},
    {0x0863, 1, 0x1f},
    {0x0864, 1, 0x20},
    {0x0865, 1, 0x3f},         //d_95% 20170830
    {0x0866, 1, 0x3c},
    {0x0867, 1, 0x2b},
    {0x0868, 1, 0x25},
    {0x0869, 1, 0x25},
    {0x086a, 1, 0x2c},
    {0x086b, 1, 0x3e},
    {0x086c, 1, 0x3f},
    {0x086d, 1, 0x2b},
    {0x086e, 1, 0x1c},
    {0x086f, 1, 0x15},
    {0x0870, 1, 0x12},
    {0x0871, 1, 0x12},
    {0x0872, 1, 0x15},
    {0x0873, 1, 0x1b},
    {0x0874, 1, 0x2c},
    {0x0875, 1, 0x1a},
    {0x0876, 1, 0x11},
    {0x0877, 1, 0xa },
    {0x0878, 1, 0x6 },
    {0x0879, 1, 0x6 },
    {0x087a, 1, 0xa },
    {0x087b, 1, 0x10},
    {0x087c, 1, 0x19},
    {0x087d, 1, 0x14},
    {0x087e, 1, 0xb },
    {0x087f, 1, 0x3 },
    {0x0880, 1, 0x0 },
    {0x0881, 1, 0x0 },
    {0x0882, 1, 0x3 },
    {0x0883, 1, 0xa },
    {0x0884, 1, 0x13},
    {0x0885, 1, 0x15},
    {0x0886, 1, 0xb },
    {0x0887, 1, 0x3 },
    {0x0888, 1, 0x0 },
    {0x0889, 1, 0x0 },
    {0x088a, 1, 0x3 },
    {0x088b, 1, 0xa },
    {0x088c, 1, 0x13},
    {0x088d, 1, 0x1a},
    {0x088e, 1, 0x11},
    {0x088f, 1, 0xb },
    {0x0890, 1, 0x7 },
    {0x0891, 1, 0x6 },
    {0x0892, 1, 0xa },
    {0x0893, 1, 0x10},
    {0x0894, 1, 0x1a},
    {0x0895, 1, 0x2c},
    {0x0896, 1, 0x1d},
    {0x0897, 1, 0x16},
    {0x0898, 1, 0x13},
    {0x0899, 1, 0x13},
    {0x089a, 1, 0x15},
    {0x089b, 1, 0x1d},
    {0x089c, 1, 0x2c},
    {0x089d, 1, 0x3f},
    {0x089e, 1, 0x3b},
    {0x089f, 1, 0x2b},
    {0x08a0, 1, 0x26},
    {0x08a1, 1, 0x26},
    {0x08a2, 1, 0x2c},
    {0x08a3, 1, 0x3c},
    {0x08a4, 1, 0x3f},
    {0x08a5, 1, 0x1c},
    {0x08a6, 1, 0x1d},
    {0x08a7, 1, 0x1b},
    {0x08a8, 1, 0x1c},
    {0x08a9, 1, 0x1b},
    {0x08aa, 1, 0x1c},
    {0x08ab, 1, 0x1d},
    {0x08ac, 1, 0x18},
    {0x08ad, 1, 0x1b},
    {0x08ae, 1, 0x1a},
    {0x08af, 1, 0x1c},
    {0x08b0, 1, 0x1c},
    {0x08b1, 1, 0x1c},
    {0x08b2, 1, 0x1c},
    {0x08b3, 1, 0x1b},
    {0x08b4, 1, 0x1d},
    {0x08b5, 1, 0x1b},
    {0x08b6, 1, 0x1c},
    {0x08b7, 1, 0x1d},
    {0x08b8, 1, 0x1d},
    {0x08b9, 1, 0x1d},
    {0x08ba, 1, 0x1d},
    {0x08bb, 1, 0x1d},
    {0x08bc, 1, 0x1c},
    {0x08bd, 1, 0x1c},
    {0x08be, 1, 0x1c},
    {0x08bf, 1, 0x1e},
    {0x08c0, 1, 0x20},
    {0x08c1, 1, 0x20},
    {0x08c2, 1, 0x1f},
    {0x08c3, 1, 0x1d},
    {0x08c4, 1, 0x1d},
    {0x08c5, 1, 0x1c},
    {0x08c6, 1, 0x1d},
    {0x08c7, 1, 0x1e},
    {0x08c8, 1, 0x20},
    {0x08c9, 1, 0x20},
    {0x08ca, 1, 0x1e},
    {0x08cb, 1, 0x1d},
    {0x08cc, 1, 0x1d},
    {0x08cd, 1, 0x1b},
    {0x08ce, 1, 0x1b},
    {0x08cf, 1, 0x1c},
    {0x08d0, 1, 0x1d},
    {0x08d1, 1, 0x1d},
    {0x08d2, 1, 0x1d},
    {0x08d3, 1, 0x1c},
    {0x08d4, 1, 0x1c},
    {0x08d5, 1, 0x1b},
    {0x08d6, 1, 0x1b},
    {0x08d7, 1, 0x1b},
    {0x08d8, 1, 0x1c},
    {0x08d9, 1, 0x1c},
    {0x08da, 1, 0x1c},
    {0x08db, 1, 0x1b},
    {0x08dc, 1, 0x1c},
    {0x08dd, 1, 0x1a},
    {0x08de, 1, 0x1c},
    {0x08df, 1, 0x1b},
    {0x08e0, 1, 0x1a},
    {0x08e1, 1, 0x1a},
    {0x08e2, 1, 0x1b},
    {0x08e3, 1, 0x1c},
    {0x08e4, 1, 0x1b},
    {0x08e5, 1, 0x25},
    {0x08e6, 1, 0x25},
    {0x08e7, 1, 0x25},
    {0x08e8, 1, 0x25},
    {0x08e9, 1, 0x25},
    {0x08ea, 1, 0x25},
    {0x08eb, 1, 0x25},
    {0x08ec, 1, 0x25},
    {0x08ed, 1, 0x24},
    {0x08ee, 1, 0x24},
    {0x08ef, 1, 0x24},
    {0x08f0, 1, 0x24},
    {0x08f1, 1, 0x24},
    {0x08f2, 1, 0x24},
    {0x08f3, 1, 0x24},
    {0x08f4, 1, 0x25},
    {0x08f5, 1, 0x23},
    {0x08f6, 1, 0x23},
    {0x08f7, 1, 0x23},
    {0x08f8, 1, 0x23},
    {0x08f9, 1, 0x23},
    {0x08fa, 1, 0x23},
    {0x08fb, 1, 0x24},
    {0x08fc, 1, 0x24},
    {0x08fd, 1, 0x22},
    {0x08fe, 1, 0x22},
    {0x08ff, 1, 0x21},
    {0x0900, 1, 0x20},
    {0x0901, 1, 0x20},
    {0x0902, 1, 0x21},
    {0x0903, 1, 0x23},
    {0x0904, 1, 0x23},
    {0x0905, 1, 0x22},
    {0x0906, 1, 0x22},
    {0x0907, 1, 0x21},
    {0x0908, 1, 0x20},
    {0x0909, 1, 0x20},
    {0x090a, 1, 0x21},
    {0x090b, 1, 0x23},
    {0x090c, 1, 0x23},
    {0x090d, 1, 0x22},
    {0x090e, 1, 0x23},
    {0x090f, 1, 0x23},
    {0x0910, 1, 0x22},
    {0x0911, 1, 0x22},
    {0x0912, 1, 0x23},
    {0x0913, 1, 0x23},
    {0x0914, 1, 0x24},
    {0x0915, 1, 0x24},
    {0x0916, 1, 0x23},
    {0x0917, 1, 0x23},
    {0x0918, 1, 0x23},
    {0x0919, 1, 0x23},
    {0x091a, 1, 0x23},
    {0x091b, 1, 0x24},
    {0x091c, 1, 0x24},
    {0x091d, 1, 0x24},
    {0x091e, 1, 0x25},
    {0x091f, 1, 0x24},
    {0x0920, 1, 0x24},
    {0x0921, 1, 0x24},
    {0x0922, 1, 0x24},
    {0x0923, 1, 0x24},
    {0x0924, 1, 0x25},
    {0xfffe, 1, 0x30},
    {0x03c4, 1, 0x06},//auto_g mode disable
    {0x03c7, 1, 0x00},// auto_g max gain changed by diana_yang 1116
    {0x03c8, 1, 0x00},
    {0x03c9, 1, 0x90},//auto_g min gain changed by diana_yang 1116
    {0x03c2, 1, 0x30},//minq
    {0x03c3, 1, 0x40},//maxq
    //ISP0 AWB      
    {0xfffe, 1, 0x14},
    {0x0248, 1, 0x02},//0. AWB_ARITH_ORIGIN21 1. AWB_ARITH_SW_PRO 2. AWB_ARITH_M
    {0x0282, 1, 0x06},   //int B gain
    {0x0283, 1, 0x00},
    {0x0286, 1, 0x04},   //int Gb gain
    {0x0287, 1, 0x00},
    {0x028a, 1, 0x04},   //int Gr gain
    {0x028b, 1, 0x00},
    {0x028e, 1, 0x04},   //int R gain
    {0x028f, 1, 0x04},
    {0x02b6, 1, 0x06},    //B_temp
    {0x02b7, 1, 0x00},
    {0x02ba, 1, 0x04},    //G_ temp
    {0x02bb, 1, 0x00},
    {0x02be, 1, 0x04},   //R_temp
    {0x02bf, 1, 0x04},
    {0xfffe, 1, 0x14},
    {0x0248, 1, 0x01},//0. AWB_ARITH_ORIGIN21 1. AWB_ARITH_SW_PRO 2. AWB_ARITH_MANUAL
    {0x0249, 1, 0x01},//AWBFlexiMap_en
    {0x024a, 1, 0x00},//AWBMove_en
    {0x027a, 1, 0x00},//nCTBasedMinNum    //20
    {0x027b, 1, 0x10},
    {0x027c, 1, 0x0f},
    {0x027d, 1, 0xff},//nMaxAWBGain
    {0xfffe, 1, 0x30},
    {0x0708, 1, 0x03}, //pixel max value[9:8]  //03
    {0x0709, 1, 0xf0}, //pixel max value[7:0]  //f0
    {0x070a, 1, 0x00}, //pixel min value[9:8]
    {0x070b, 1, 0x0c}, //pixel min value[7:0]
    {0x071c, 1, 0x0a}, //simple awb
    {0xfffe, 1, 0x30},
    {0x0730, 1, 0x80},  // win1 startx
    {0x0731, 1, 0x9d},  // win1 endx
    {0x0732, 1, 0x40},  // win1 starty
    {0x0733, 1, 0x4d},  // win1 endy
    {0x0734, 1, 0x70},  // win2 startx
    {0x0735, 1, 0x8a},  // win2 endx
    {0x0736, 1, 0x62},  // win2 starty
    {0x0737, 1, 0x78},  // win2 endy
    {0x0738, 1, 0x4a},  // win3 startx
    {0x0739, 1, 0x69},  // win3 endx
    {0x073a, 1, 0x7d},  // win3 starty
    {0x073b, 1, 0x98},  // win3 endy
    {0x073c, 1, 0x6a},  // win4 startx
    {0x073d, 1, 0x86},  // win4 endx
    {0x073e, 1, 0x5a},  // win4 starty
    {0x073f, 1, 0x6b},  // win4 endy
    {0x0740, 1, 0x54},  // win5 startx
    {0x0741, 1, 0x73},  // win5 endx
    {0x0742, 1, 0x71},  // win5 starty
    {0x0743, 1, 0x88},  // win5 endy
    {0x0744, 1, 0x7a},  // win6 startx
    {0x0745, 1, 0x8a},  // win6 endx
    {0x0746, 1, 0x4b},  // win6 starty
    {0x0747, 1, 0x5d},  // win6 endy
    {0x0748, 1, 0x00},  // win7 startx
    {0x0749, 1, 0x00},  // win7 endx
    {0x074a, 1, 0x00},  // win7 starty
    {0x074b, 1, 0x00},  // win7 endy
    {0x074c, 1, 0x00},  // win8 startx
    {0x074d, 1, 0x00},  // win8 endx
    {0x074e, 1, 0x00},  // win8 starty
    {0x074f, 1, 0x00},  // win8 endy
    {0x0750, 1, 0x00},  // win9 startx
    {0x0751, 1, 0x00},  // win9 endx
    {0x0752, 1, 0x00},  // win9 starty
    {0x0753, 1, 0x00},  // win9 endy
    {0x0754, 1, 0x00},  // win10 startx
    {0x0755, 1, 0x00},  // win10 endx
    {0x0756, 1, 0x00},  // win10 starty
    {0x0757, 1, 0x00},  // win10 endy
    {0x0758, 1, 0x00},  // win11 startx
    {0x0759, 1, 0x00},  // win11 endx
    {0x075a, 1, 0x00},  // win11 starty
    {0x075b, 1, 0x00},  // win11 endy
    {0x075c, 1, 0x00},  // win12 startx
    {0x075d, 1, 0x00},  // win12 endx
    {0x075e, 1, 0x00},  // win12 starty
    {0x075f, 1, 0x00},  // win12 endy
    {0x0760, 1, 0x00},  // win13 startx
    {0x0761, 1, 0x00},  // win13 endx
    {0x0762, 1, 0x00},  // win13 starty
    {0x0763, 1, 0x00},  // win13 endy
    {0x0764, 1, 0x00},  // win14 startx
    {0x0765, 1, 0x00},  // win14 endx
    {0x0766, 1, 0x00},  // win14 starty
    {0x0767, 1, 0x00},  // win14 endy
    {0x0768, 1, 0x00},  // win15 startx
    {0x0769, 1, 0x00},  // win15 endx
    {0x076a, 1, 0x00},  // win15 starty
    {0x076b, 1, 0x00},  // win15 endy
    {0x076c, 1, 0x00},  // win16 startx
    {0x076d, 1, 0x00},  // win16 endx
    {0x076e, 1, 0x00},  // win16 starty
    {0x076f, 1, 0x00},  // win16 endy
    {0x0770, 1, 0x22},  // wt1 wt2
    {0x0771, 1, 0x21},  // wt3 wt4
    {0x0772, 1, 0x11},  // wt5 wt6
    {0x0773, 1, 0x00},  // wt7 wt8
    {0x0774, 1, 0x00},  // wt9 wt10
    {0x0775, 1, 0x00},  // wt11 wt12
    {0x0776, 1, 0x00},  // wt13 wt14
    {0x0777, 1, 0x00},  // wt15 wt16
    //Gamma         
    {0xfffe, 1, 0x30},
    {0x1400, 1, 0x00},
    {0x1401, 1, 0x08},
    {0x1402, 1, 0x0f},
    {0x1403, 1, 0x17},
    {0x1404, 1, 0x1e},
    {0x1405, 1, 0x25},
    {0x1406, 1, 0x2c},
    {0x1407, 1, 0x32},
    {0x1408, 1, 0x38},
    {0x1409, 1, 0x3e},
    {0x140a, 1, 0x44},
    {0x140b, 1, 0x4a},
    {0x140c, 1, 0x4f},
    {0x140d, 1, 0x54},
    {0x140e, 1, 0x59},
    {0x140f, 1, 0x5e},
    {0x1410, 1, 0x63},
    {0x1411, 1, 0x68},
    {0x1412, 1, 0x6c},
    {0x1413, 1, 0x70},
    {0x1414, 1, 0x75},
    {0x1415, 1, 0x79},
    {0x1416, 1, 0x7d},
    {0x1417, 1, 0x80},
    {0x1418, 1, 0x84},
    {0x1419, 1, 0x88},
    {0x141a, 1, 0x8b},
    {0x141b, 1, 0x8e},
    {0x141c, 1, 0x91},
    {0x141d, 1, 0x94},
    {0x141e, 1, 0x97},
    {0x141f, 1, 0x9a},
    {0x1420, 1, 0x9d},
    {0x1421, 1, 0xa2},
    {0x1422, 1, 0xa6},
    {0x1423, 1, 0xaa},
    {0x1424, 1, 0xae},
    {0x1425, 1, 0xb2},
    {0x1426, 1, 0xb6},
    {0x1427, 1, 0xb9},
    {0x1428, 1, 0xbc},
    {0x1429, 1, 0xbf},
    {0x142a, 1, 0xc1},
    {0x142b, 1, 0xc4},
    {0x142c, 1, 0xc7},
    {0x142d, 1, 0xc9},
    {0x142e, 1, 0xcb},
    {0x142f, 1, 0xce},
    {0x1430, 1, 0xd0},
    {0x1431, 1, 0xd4},
    {0x1432, 1, 0xd8},
    {0x1433, 1, 0xdc},  
    {0x1434, 1, 0xe0},  
    {0x1435, 1, 0xe3},
    {0x1436, 1, 0xe6},
    {0x1437, 1, 0xe9},
    {0x1438, 1, 0xec},
    {0x1439, 1, 0xef},
    {0x143a, 1, 0xf1},
    {0x143b, 1, 0xf4},
    {0x143c, 1, 0xf6},
    {0x143d, 1, 0xf9},
    {0x143e, 1, 0xfb},
    {0x143f, 1, 0xfd},
    {0x1440, 1, 0xff},
    {0x1450, 1, 0xff},
    {0x1451, 1, 0x03},
    {0x1452, 1, 0x70},
    {0x1453, 1, 0x60},
    //ISP0 CMX
    {0xfffe, 1, 0x30},
    {0x1200, 1, 0x4},
    {0x1201, 1, 0x1A},
    {0x1202, 1, 0x0},
    {0x1203, 1, 0x89},
    {0x1204, 1, 0x2},
    {0x1205, 1, 0xC0},
    {0x1206, 1, 0x1},
    {0x1207, 1, 0x39},
    {0x1208, 1, 0x0},
    {0x1209, 1, 0x1E},
    {0x120A, 1, 0x2},
    {0x120B, 1, 0x7B},
    {0x120C, 1, 0x6},
    {0x120D, 1, 0x9A},
    {0x120E, 1, 0x1},
    {0x120F, 1, 0x8B},
    {0x1210, 1, 0x1},
    {0x1211, 1, 0xF5},
    {0x1212, 1, 0x1},
    {0x1213, 1, 0x5D},
    {0x1214, 1, 0x0},
    {0x1215, 1, 0x10},
    {0x1216, 1, 0x0},
    {0x1217, 1, 0xA3},
    {0x1218, 1, 0x4},
    {0x1219, 1, 0x52},
    {0x121A, 1, 0x0},
    {0x121B, 1, 0x83},
    {0x121C, 1, 0x1},
    {0x121D, 1, 0xEE},
    {0x121E, 1, 0x1},
    {0x121F, 1, 0xA7},
    {0x1220, 1, 0x0},
    {0x1221, 1, 0x53},
    {0x1222, 1, 0x3},
    {0x1223, 1, 0x95},
    {0x122e, 1, 0x2},
    {0x122F, 1, 0x2},
    {0x1230, 1, 0x0},
    {0x1228, 1, 0x0},
    {0x1229, 1, 0x4C},
    {0x122A, 1, 0x0},
    {0x122B, 1, 0x8D},
    {0x122C, 1, 0x0},
    {0x122D, 1, 0xEC},
    {0x1231, 1, 0x02},
    //advance_raw_dns
    {0xfffe, 1, 0x30},
    {0x2000, 1, 0x14},  //s0_sigma_0
    {0x2001, 1, 0x18},
    {0x2002, 1, 0x1d},
    {0x2003, 1, 0x20},
    {0x2004, 1, 0x28},
    {0x2005, 1, 0x30},  //s0_sigma_5
    {0x2006, 1, 0x18},  //s0_Gsl_0
    {0x2007, 1, 0x14},
    {0x2008, 1, 0x10},
    {0x2009, 1, 0x0a},
    {0x200a, 1, 0x04},
    {0x200b, 1, 0x01},  //s0_Gsl_5
    {0x200c, 1, 0x1a},  //s0_RBsl_0
    {0x200d, 1, 0x18},
    {0x200e, 1, 0x16},
    {0x200f, 1, 0x10},
    {0x2010, 1, 0x08},
    {0x2011, 1, 0x04},   //s0_RBsl_5
    {0x2012, 1, 0x20},   //s0_ps00    //sigma_scale 大
    {0x2013, 1, 0x24},
    {0x2014, 1, 0x28},
    {0x2015, 1, 0x30},
    {0x2016, 1, 0x38},
    {0x2017, 1, 0x40},   //s0_ps05
    {0x2018, 1, 0x1a},   //s0_ps10
    {0x2019, 1, 0x20},
    {0x201a, 1, 0x24},
    {0x201b, 1, 0x28},
    {0x201c, 1, 0x30},
    {0x201d, 1, 0x38},  //s0_ps15
    {0x201e, 1, 0x18},  //s0_ps20
    {0x201f, 1, 0x1d},
    {0x2020, 1, 0x20},
    {0x2021, 1, 0x24},
    {0x2022, 1, 0x28},
    {0x2023, 1, 0x30},   //s0_ps25
    {0x2024, 1, 0x16},   //s0_ps30
    {0x2025, 1, 0x18},
    {0x2026, 1, 0x1a},
    {0x2027, 1, 0x20},
    {0x2028, 1, 0x24},
    {0x2029, 1, 0x28},   //s0_ps35
    {0x202a, 1, 0x28},    //s0_pl00     //h2_scale 小
    {0x202b, 1, 0x20},
    {0x202c, 1, 0x16},
    {0x202d, 1, 0x10},
    {0x202e, 1, 0x0c},
    {0x202f, 1, 0x08},   //s0_pl05
    {0x2030, 1, 0x30},   //s0_pl10
    {0x2031, 1, 0x28},
    {0x2032, 1, 0x24},
    {0x2033, 1, 0x20},
    {0x2034, 1, 0x1a},
    {0x2035, 1, 0x16},   //s0_pl15
    {0x2036, 1, 0x32},  //s0_pl20
    {0x2037, 1, 0x2a},
    {0x2038, 1, 0x28},
    {0x2039, 1, 0x24},
    {0x203a, 1, 0x20},
    {0x203b, 1, 0x1a},   //s0_pl25
    {0x203c, 1, 0x38},  //s0_pl30
    {0x203d, 1, 0x32},
    {0x203e, 1, 0x2a},
    {0x203f, 1, 0x28},
    {0x2040, 1, 0x24},
    {0x2041, 1, 0x20},   //s0_pl35
    {0x2044, 1, 0x10},   //bit[4:0]thre_y
    //UV DNS 
    {0xfffe, 1, 0x30},
    {0x2100, 1, 0x04},  //l_noise_list0
    {0x2101, 1, 0x0a},
    {0x2102, 1, 0x10},
    {0x2103, 1, 0x18},
    {0x2104, 1, 0x28},
    {0x2105, 1, 0x48},  //l_noise_list5
    {0x2106, 1, 0x5f},  //bit[7]l_noise_man_en; bit[6]l_sdw_ext_en; bit[4:0]l_sdw_ext_ns
    {0x2107, 1, 0x08},  //l_noise_man
    //CIP           
    {0xfffe, 1, 0x30},
    {0x0f00, 1, 0x4f},   //bit[7:4] noise_y_slp  bit[3:0] Lsharp
    {0x0f02, 1, 0x00},  //noise_list_0
    {0x0f03, 1, 0x00},
    {0x0f04, 1, 0x00},
    {0x0f05, 1, 0x00},
    {0x0f06, 1, 0x00},
    {0x0f07, 1, 0x00},
    {0x0f08, 1, 0x00},
    {0x0f09, 1, 0x00},  //noise_list_7
    {0x0f0a, 1, 0x32},   //min_shp       //30
    {0x0f0b, 1, 0x3f},   //max_shp       //38
    {0x0f0c, 1, 0x01},   //min_detail    //0b
    {0x0f0d, 1, 0x03},   //max_detail    //0d
    {0x0f0e, 1, 0x01},   //min_shp_gain  //10
    {0x0f0f, 1, 0x10},   //max_shp_gain  //40
    //defog         
    {0xfffe, 1, 0x30},
    {0x2b04, 1, 0x08},   //bit[3:0]饱和度增强
    {0x2b16, 1, 0x04},  //bit[3]pdf_avg_mode; bit[2]detail_enhance_en; bit[1]wdr_en; bit[0]:jdark_en
    {0xfffe, 1, 0x14},
    {0x002f, 1, 0x01},
    {0x09ab, 1, 0x02},   //Gmax
    {0x09ac, 1, 0x08},   //map_rang[0]
    {0x09ad, 1, 0xb4},   //map_rang[1]
    {0x09ae, 1, 0x41},   //nzPDF64_num_thd
    {0x09af, 1, 0xff},   //grayhigh      //changed by yang 20170112
    {0x09b2, 1, 0x00},
    {0x09b3, 1, 0x38},   //gain_thd[7:0]
    {0x09b4, 1, 0x10},   //Extratio
    {0x09b5, 1, 0x14},   //Extratio max
    {0x09b6, 1, 0x00},  //weak_adj_on  0x00:强均衡；0x01:弱均衡
    {0xfffe, 1, 0x30},
    {0x2b9a, 1, 0x00},  //gain0   0xgain
    {0x2b9b, 1, 0x00},
    {0x2b9c, 1, 0x10},  //gain1   1xgain
    {0x2b9d, 1, 0x00},
    {0x2b9e, 1, 0x20},  //gain2   2xgain
    {0x2b9f, 1, 0x00},
    {0x2ba0, 1, 0x40},  //gain3   4xgain
    {0x2ba1, 1, 0x00},
    {0x2ba2, 1, 0x80},  //gain4   7xgain
    {0x2ba3, 1, 0x00},
    {0x2ba4, 1, 0xb0},  //gain5   10xgain
    {0x2ba5, 1, 0x00},
    {0x2ba6, 1, 0xd0},  //gain6   13gain
    {0x2ba7, 1, 0x00},
    {0x2ba8, 1, 0x00},   //gain7  16gain
    {0x2ba9, 1, 0x01},
    {0x2bac, 1, 0x04},  //thd0
    {0x2bad, 1, 0x08},
    {0x2bae, 1, 0x0d},
    {0x2baf, 1, 0x14},
    {0x2bb0, 1, 0x17},
    {0x2bb1, 1, 0x19},
    {0x2bb2, 1, 0x1b},
    {0x2bb3, 1, 0x20},  //thd7
    {0x2bb4, 1, 0x5f},   //thd0_max
    {0x2bb5, 1, 0x5f},
    {0x2bb6, 1, 0x5f},
    {0x2bb7, 1, 0x4f},
    {0x2bb8, 1, 0x4f},
    {0x2bb9, 1, 0x3f},
    {0x2bba, 1, 0x3f},
    {0x2bbb, 1, 0x2f},   //thd7_max
    {0x2bbc, 1, 0x3f},  //enhance_ratio0
    {0x2bbd, 1, 0x3f},
    {0x2bbe, 1, 0x2f},
    {0x2bbf, 1, 0x26},
    {0x2bc0, 1, 0x1c},
    {0x2bc1, 1, 0x18},
    {0x2bc2, 1, 0x10},
    {0x2bc3, 1, 0x0c},  //enhance_ratio7
    //defog end     
    {0xfffe, 1, 0x14},
    {0x26c, 1, 0x01},   //[ 7: 0] bAutoSat
    {0x26e, 1, 0x40},   //[ 7: 0] sat_u[0]
    {0x26f, 1, 0x40},   //[ 7: 0] sat_u[1]
    {0x270, 1, 0x40},   //[ 7: 0] sat_u[2]
    {0x271, 1, 0x40},   //[ 7: 0] sat_u[3]
    {0x272, 1, 0x40},   //[ 7: 0] sat_u[4]
    {0x273, 1, 0x40},   //[ 7: 0] sat_u[5]
    {0x274, 1, 0x40},   //[ 7: 0] sat_v[0]
    {0x275, 1, 0x40},   //[ 7: 0] sat_v[1]
    {0x276, 1, 0x40},   //[ 7: 0] sat_v[2]
    {0x277, 1, 0x40},   //[ 7: 0] sat_v[3]
    {0x278, 1, 0x40},   //[ 7: 0] sat_v[4]
    {0x279, 1, 0x40},   //[ 7: 0] sat_v[5]
    //ISP0 TOP
    {0xfffe, 1, 0x14},
    {0x002c, 1, 0x01},
    {0x002b, 1, 0x01},
    {0x002d, 1, 0x00},
    {0x002f, 1, 0x01},
    {0xfffe, 1, 0x30},
    {0x0000, 1, 0x57},
    {0x0001, 1, 0x92},
    {0x0002, 1, 0x96},
    {0x0003, 1, 0x31},
    {0x0004, 1, 0x10},
    {0x0019, 1, 0x8b},
    {0x071c, 1, 0x0a},
    {0x1700, 1, 0x09},
    {0x1701, 1, 0x40},
    {0x1702, 1, 0x40},
    {0x1704, 1, 0x23},
//YVYU_FORMAT[] 
    {0xfffe, 1, 0x30},
    {0x006c, 1, 0x80},
    {0x1800, 1, 0x50},
    };
    
#ifdef __cplusplus
    }
#endif
    
#endif 


