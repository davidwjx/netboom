/****************************************************************************
 *
 *   FileName: OV5675_cfg_tbl.h
 *
 *   Author: Benny V.
 *
 *   Date: 
 *
 *   Description: OV5675 layer
 *
 ****************************************************************************/
#ifndef OV5675_CFG_TBL_H
#define OV5675_CFG_TBL_H

#include "inu_common.h"

#ifdef __cplusplus
   extern "C" {
#endif

#define OV5675_OV8856_WORKAROUND
/****************************************************************************
 ***************     G L O B A L        D E F N I T I O N S    **************
 ****************************************************************************/

   typedef enum {
      OV5675_CFG_TBLG_SINGLE_TABLE_E        = 0,
      OV5675_CFG_TBLG_STEREO_TABLE_E,
      OV5675_CFG_TBLG_NUM_OF_TABLES_E
   } OV5675_CFG_TBLG_sensorTablesE;



const GEN_SENSOR_DRVG_regTblParamsT OV5670_CFG_TBLG_stereo_hd_configTable[] =
{
        {0x0100, 1, 0x00},
        {0x0300, 1, 0x04},
        {0x0301, 1, 0x00},
        {0x0302, 1, 0x69},//78 ; MIPI bit rate 960Mbps/lane -> 840Mbps/lane
        {0x0303, 1, 0x00},
        {0x0304, 1, 0x03},
        {0x0305, 1, 0x01},
        {0x0306, 1, 0x01},
        {0x030a, 1, 0x00},
        {0x030b, 1, 0x00},
        {0x030c, 1, 0x00},
        {0x030d, 1, 0x1e},
        {0x030e, 1, 0x00},
        {0x030f, 1, 0x06},
        {0x0312, 1, 0x01},
        {0x3000, 1, 0x00},
        {0x3002, 1, 0x21},
        {0x3005, 1, 0xf0},
        {0x3007, 1, 0x00},
        {0x3015, 1, 0x0f},
        {0x3018, 1, 0x32},
        {0x301a, 1, 0xf0},
        {0x301b, 1, 0xf0},
        {0x301c, 1, 0xf0},
        {0x301d, 1, 0xf0},
        {0x301e, 1, 0xf0},
        {0x3030, 1, 0x00},
        {0x3031, 1, 0x0a},
        {0x303c, 1, 0xff},
        {0x303e, 1, 0xff},
        {0x3040, 1, 0xf0},
        {0x3041, 1, 0x00},
        {0x3042, 1, 0xf0},
        {0x3106, 1, 0x11},
        {0x3500, 1, 0x00},
        {0x3501, 1, 0x7b},
        {0x3502, 1, 0x00},
        {0x3503, 1, 0x04},
        {0x3504, 1, 0x03},
        {0x3505, 1, 0x83},
        {0x3508, 1, 0x04},
        {0x3509, 1, 0x00},
        {0x350e, 1, 0x04},
        {0x350f, 1, 0x00},
        {0x3510, 1, 0x00},
        {0x3511, 1, 0x02},
        {0x3512, 1, 0x00},
        {0x3601, 1, 0xc8},
        {0x3610, 1, 0x88},
        {0x3612, 1, 0x48},
        {0x3614, 1, 0x5b},
        {0x3615, 1, 0x96},
        {0x3621, 1, 0xd0},
        {0x3622, 1, 0x00},
        {0x3623, 1, 0x00},
        {0x3633, 1, 0x13},
        {0x3634, 1, 0x13},
        {0x3635, 1, 0x13},
        {0x3636, 1, 0x13},
        {0x3645, 1, 0x13},
        {0x3646, 1, 0x82},
        {0x3650, 1, 0x00},
        {0x3652, 1, 0xff},
        {0x3655, 1, 0x20},
        {0x3656, 1, 0xff},
        {0x365a, 1, 0xff},
        {0x365e, 1, 0xff},
        {0x3668, 1, 0x00},
        {0x366a, 1, 0x07},
        {0x366e, 1, 0x10},
        {0x366d, 1, 0x00},
        {0x366f, 1, 0x80},
        {0x3700, 1, 0x28},
        {0x3701, 1, 0x10},
        {0x3702, 1, 0x3a},
        {0x3703, 1, 0x19},
        {0x3704, 1, 0x10},
        {0x3705, 1, 0x00},
        {0x3706, 1, 0x66},
        {0x3707, 1, 0x08},
        {0x3708, 1, 0x34},
        {0x3709, 1, 0x40},
        {0x370a, 1, 0x01},
        {0x370b, 1, 0x1b},
        {0x3714, 1, 0x24},
        {0x371a, 1, 0x3e},
        {0x3733, 1, 0x00},
        {0x3734, 1, 0x00},
        {0x373a, 1, 0x05},
        {0x373b, 1, 0x06},
        {0x373c, 1, 0x0a},
        {0x373f, 1, 0xa0},
        {0x3755, 1, 0x00},
        {0x3758, 1, 0x00},
        {0x375b, 1, 0x0e},
        {0x3766, 1, 0x5f},
        {0x3768, 1, 0x00},
        {0x3769, 1, 0x22},
        {0x3773, 1, 0x08},
        {0x3774, 1, 0x1f},
        {0x3776, 1, 0x06},
        {0x37a0, 1, 0x88},
        {0x37a1, 1, 0x5c},
        {0x37a7, 1, 0x88},
        {0x37a8, 1, 0x70},
        {0x37aa, 1, 0x88},
        {0x37ab, 1, 0x48},
        {0x37b3, 1, 0x66},
        {0x37c2, 1, 0x04},
        {0x37c5, 1, 0x00},
        {0x37c8, 1, 0x00},
        {0x3800, 1, 0x00},
        {0x3801, 1, 0x0c},
        {0x3802, 1, 0x00},
        {0x3803, 1, 0x04},
        {0x3804, 1, 0x0a},
        {0x3805, 1, 0x33},
        {0x3806, 1, 0x07},
        {0x3807, 1, 0xa3},
        {0x3808, 1, 0x0a},
        {0x3809, 1, 0x20},
        {0x380a, 1, 0x07},
        {0x380b, 1, 0x98},
        {0x380c, 1, 0x06},
        {0x380d, 1, 0x90},//8c
        {0x380e, 1, 0x07},
        {0x380f, 1, 0xb8},
        {0x3811, 1, 0x04},
        {0x3813, 1, 0x02},
        {0x3814, 1, 0x01},
        {0x3815, 1, 0x01},
        {0x3816, 1, 0x00},
        {0x3817, 1, 0x00},
        {0x3818, 1, 0x00},
        {0x3819, 1, 0x00},
        {0x3820, 1, 0x80},
        {0x3821, 1, 0x46},
        {0x3822, 1, 0x48},
        {0x3826, 1, 0x00},
        {0x3827, 1, 0x08},
        {0x382a, 1, 0x01},
        {0x382b, 1, 0x01},
        {0x3830, 1, 0x08},
        {0x3836, 1, 0x02},
        {0x3837, 1, 0x00},
        {0x3838, 1, 0x10},
        {0x3841, 1, 0xff},
        {0x3846, 1, 0x48},
        {0x3861, 1, 0x00},
        {0x3862, 1, 0x04},
        {0x3863, 1, 0x06},
        {0x3a11, 1, 0x01},
        {0x3a12, 1, 0x78},
        {0x3b00, 1, 0x00},
        {0x3b02, 1, 0x00},
        {0x3b03, 1, 0x00},
        {0x3b04, 1, 0x00},
        {0x3b05, 1, 0x00},
        {0x3c00, 1, 0x89},
        {0x3c01, 1, 0xab},
        {0x3c02, 1, 0x01},
        {0x3c03, 1, 0x00},
        {0x3c04, 1, 0x00},
        {0x3c05, 1, 0x03},
        {0x3c06, 1, 0x00},
        {0x3c07, 1, 0x05},
        {0x3c0c, 1, 0x00},
        {0x3c0d, 1, 0x00},
        {0x3c0e, 1, 0x00},
        {0x3c0f, 1, 0x00},
        {0x3c40, 1, 0x00},
        {0x3c41, 1, 0xa3},
        {0x3c43, 1, 0x7d},
        {0x3c45, 1, 0xd7},
        {0x3c47, 1, 0xfc},
        {0x3c50, 1, 0x05},
        {0x3c52, 1, 0xaa},
        {0x3c54, 1, 0x71},
        {0x3c56, 1, 0x80},
        {0x3d85, 1, 0x17},
        {0x3f03, 1, 0x00},
        {0x3f0a, 1, 0x00},
        {0x3f0b, 1, 0x00},
        {0x4001, 1, 0x60},
        {0x4009, 1, 0x0d},
        {0x4020, 1, 0x00},
        {0x4021, 1, 0x00},
        {0x4022, 1, 0x00},
        {0x4023, 1, 0x00},
        {0x4024, 1, 0x00},
        {0x4025, 1, 0x00},
        {0x4026, 1, 0x00},
        {0x4027, 1, 0x00},
        {0x4028, 1, 0x00},
        {0x4029, 1, 0x00},
        {0x402a, 1, 0x00},
        {0x402b, 1, 0x00},
        {0x402c, 1, 0x00},
        {0x402d, 1, 0x00},
        {0x402e, 1, 0x00},
        {0x402f, 1, 0x00},
        {0x4040, 1, 0x00},
        {0x4041, 1, 0x03},
        {0x4042, 1, 0x00},
        {0x4043, 1, 0x7A}, // 1/1.05 x (0x80)
        {0x4044, 1, 0x00},
        {0x4045, 1, 0x7A},
        {0x4046, 1, 0x00},
        {0x4047, 1, 0x7A},
        {0x4048, 1, 0x00},
        {0x4049, 1, 0x7A},
        {0x4303, 1, 0x00},
        {0x4307, 1, 0x30},
        {0x4500, 1, 0x58},
        {0x4501, 1, 0x04},
        {0x4502, 1, 0x40},
       {0x4503, 1, 0x10},
        {0x4508, 1, 0xaa},
        {0x4509, 1, 0xaa},
        {0x450a, 1, 0x00},
        {0x450b, 1, 0x00},
        {0x4600, 1, 0x01},
        {0x4601, 1, 0x03},
        {0x4700, 1, 0xa4},
        {0x4800, 1, 0x4c},
        {0x4816, 1, 0x53},
        {0x481f, 1, 0x40},
        {0x4837, 1, 0x13},//11 MIPI global timing
        {0x5000, 1, 0x56},
        {0x5001, 1, 0x01},
        {0x5002, 1, 0x28},
        {0x5004, 1, 0x0c},
        {0x5006, 1, 0x0c},
        {0x5007, 1, 0xe0},
        {0x5008, 1, 0x01},
        {0x5009, 1, 0xb0},
        {0x5901, 1, 0x00},
        {0x5a01, 1, 0x00},
        {0x5a03, 1, 0x00},
        {0x5a04, 1, 0x0c},
        {0x5a05, 1, 0xe0},
        {0x5a06, 1, 0x09},
        {0x5a07, 1, 0xb0},
        {0x5a08, 1, 0x06},
        {0x5e00, 1, 0x00},
        {0x3734, 1, 0x40},
        {0x5b00, 1, 0x01},
        {0x5b01, 1, 0x10},
        {0x5b02, 1, 0x01},
        {0x5b03, 1, 0xdb},
        {0x3d8c, 1, 0x71},
        {0x3d8d, 1, 0xea},
        {0x4017, 1, 0x08},
        {0x3618, 1, 0x2a},

        //Ping
        //Strong DPC1.53
        {0x5780, 1  ,0x3e},
        {0x5781, 1  ,0x0f},
        {0x5782, 1  ,0x44},
        {0x5783, 1  ,0x02},
        {0x5784, 1  ,0x01},
        {0x5785, 1  ,0x01},
        {0x5786, 1  ,0x00},
        {0x5787, 1  ,0x04},
        {0x5788, 1  ,0x02},
        {0x5789, 1  ,0x0f},
        {0x578a, 1  ,0xfd},
        {0x578b, 1  ,0xf5},
        {0x578c, 1  ,0xf5},
        {0x578d, 1  ,0x03},
        {0x578e, 1  ,0x08},
        {0x578f, 1  ,0x0c},
        {0x5790, 1  ,0x08},
        {0x5791, 1  ,0x06},
        {0x5792, 1  ,0x00},
        {0x5793, 1  ,0x52},
        {0x5794, 1  ,0xa3},
        //fps fine adjustment
         {0x380e, 1  ,0x07},
        {0x380f, 1  ,0xf6},//fd
        // real gain [2]
        {0x3503, 1  ,0x00},
        //UL0xPM , 1 o,0xut},put low
        {0x3002, 1  ,0x61}, //[6]ULPM output enable
        {0x3010, 1  ,0x40}, //[6]enable ULPM as GPIO controlled by register
        {0x300D, 1  ,0x00}, //[6]ULPM output low (if 1=> high)
        //    MWB bias manual
        {0x5045, 1  ,0x05},// [2] enable MWB manual bias
        {0x5048, 1  ,0x10},// MWB manual bias// need to be the same with 0x4003 BLC target.
        //        VFPN improvement
        {0x3610, 1  ,0xa8},
        {0x3733, 1  ,0x10},
        {0x3734, 1  ,0x40},
        {0x3020, 1, 0x8b} //sccb_id2_nack disable. when enable the sensor dos not answer to the common address 0x42. approved by system&HW team
};


const GEN_SENSOR_DRVG_regTblParamsT OV5675_CFG_TBLG_stereo_hd_configTable[] =
{
#ifndef OV5675_OV8856_WORKAROUND
          {0x0103, 1, 0x01},
#endif
          {0x0300, 1, 0x05},
          {0x0302, 1, 0x96},
          {0x0303, 1, 0x00},
          {0x3002, 1, 0x21},
          {0x3107, 1, 0x23},
          {0x3501, 1, 0x20},
          {0x3503, 1, 0x0c},
          {0x3508, 1, 0x03},
          {0x3509, 1, 0x00},
          {0x3600, 1, 0x66},
          {0x3602, 1, 0x30},
          {0x3610, 1, 0xa5},
          {0x3612, 1, 0x93},
          {0x3620, 1, 0x80},
          {0x3642, 1, 0x0e},
          {0x3661, 1, 0x00},
          {0x3662, 1, 0x10},
          {0x3664, 1, 0xf3},
          {0x3665, 1, 0x9e},
          {0x3667, 1, 0xa5},
          {0x366e, 1, 0x55},
          {0x366f, 1, 0x55},
          {0x3670, 1, 0x11},
          {0x3671, 1, 0x11},
          {0x3672, 1, 0x11},
          {0x3673, 1, 0x11},
          {0x3714, 1, 0x24},
          {0x371a, 1, 0x3e},
          {0x3733, 1, 0x10},
          {0x3734, 1, 0x00},
          {0x373d, 1, 0x24},
          {0x3764, 1, 0x20},
          {0x3765, 1, 0x20},
          {0x3766, 1, 0x12},
          {0x37a1, 1, 0x14},
          {0x37a8, 1, 0x1c},
          {0x37ab, 1, 0x0f},
          {0x37c2, 1, 0x04},
          {0x37cb, 1, 0x00},
          {0x37cc, 1, 0x00},
          {0x37cd, 1, 0x00},
          {0x37ce, 1, 0x00},
          {0x37d8, 1, 0x02},
          {0x37d9, 1, 0x08},
          {0x37dc, 1, 0x04},
          {0x3800, 1, 0x00},
          {0x3801, 1, 0x00},
          {0x3802, 1, 0x00},
          {0x3803, 1, 0x04},
          {0x3804, 1, 0x0a},
          {0x3805, 1, 0x3f},
          {0x3806, 1, 0x07},
          {0x3807, 1, 0xb3},
          {0x3808, 1, 0x0a},
          {0x3809, 1, 0x20},
          {0x380a, 1, 0x07},
          {0x380b, 1, 0x98},
          {0x380c, 1, 0x02},
          {0x380d, 1, 0xee},
          {0x380e, 1, 0x07},
          {0x380f, 1, 0xd0},
          {0x3811, 1, 0x10},
          {0x3813, 1, 0x0c},
          {0x3814, 1, 0x01},
          {0x3815, 1, 0x01},
          {0x3816, 1, 0x01},
          {0x3817, 1, 0x01},
          {0x381e, 1, 0x02},
          {0x3820, 1, 0x88},
          {0x3821, 1, 0x01},
          {0x3832, 1, 0x04},
          {0x3c80, 1, 0x01},
          {0x3c82, 1, 0x00},
          {0x3c83, 1, 0xc8},
          {0x3c8c, 1, 0x0f},
          {0x3c8d, 1, 0xa0},
          {0x3c90, 1, 0x07},
          {0x3c91, 1, 0x00},
          {0x3c92, 1, 0x00},
          {0x3c93, 1, 0x00},
          {0x3c94, 1, 0xd0},
          {0x3c95, 1, 0x50},
          {0x3c96, 1, 0x35},
          {0x3c97, 1, 0x00},
          {0x4001, 1, 0xe0},
          {0x4008, 1, 0x02},
          {0x4009, 1, 0x0d},
          {0x400f, 1, 0x80},
          {0x4013, 1, 0x02},
          {0x4040, 1, 0x00},
          {0x4041, 1, 0x07},
          {0x404c, 1, 0x50},
          {0x404e, 1, 0x20},
          {0x4500, 1, 0x06},
          {0x4503, 1, 0x00},
          {0x450a, 1, 0x04},
          {0x4809, 1, 0x04},
          {0x480c, 1, 0x12},
          {0x4819, 1, 0x70},
          {0x4825, 1, 0x32},
          {0x4826, 1, 0x32},
          {0x482a, 1, 0x06},
          {0x4833, 1, 0x08},
          {0x4837, 1, 0x0d},
          {0x5000, 1, 0x77},
          {0x5b00, 1, 0x01},
          {0x5b01, 1, 0x10},
          {0x5b02, 1, 0x01},
          {0x5b03, 1, 0xdb},
          {0x5b05, 1, 0x6c},
          {0x5e10, 1, 0xfc},

                                           //max exposure is (VTS-4)/2
                                           //expo is twice as before. Ex. [3501,3502]=0040 means 8 Tline exposure.
          {0x3500, 1, 0x00},
          {0x3501, 1, 0x3E},                                           //max expo= ([380e,380f]-4)/2.
          {0x3502, 1, 0x60},
                                           //8xgain
          {0x3503, 1, 0x08},                                           //[2]=0 real gain
          {0x3508, 1, 0x04},                                           //
          {0x3509, 1, 0x00},                                           //[3508,3509]=0x0080 is 1xgain
                                           //Vsync
          {0x3832, 1, 0x48},                                           // [7:4]vsync_width                                            // R3002[5] p_fsin_oen
                                           //MIPI
          {0x3c90, 1, 0x00},                                           //MIPI Continuous mode (07 Gated mode)
                                           //Strong DPC1.53
          {0x5780, 1, 0x3e},
          {0x5781, 1, 0x0f},
          {0x5782, 1, 0x44},
          {0x5783, 1, 0x02},
          {0x5784, 1, 0x01},
          {0x5785, 1, 0x01},
          {0x5786, 1, 0x00},
          {0x5787, 1, 0x04},
          {0x5788, 1, 0x02},
          {0x5789, 1, 0x0f},
          {0x578a, 1, 0xfd},
          {0x578b, 1, 0xf5},
          {0x578c, 1, 0xf5},
          {0x578d, 1, 0x03},
          {0x578e, 1, 0x08},
          {0x578f, 1, 0x0c},
          {0x5790, 1, 0x08},
          {0x5791, 1, 0x06},
          {0x5792, 1, 0x00},
          {0x5793, 1, 0x52},
          {0x5794, 1, 0xa3},
                                          //BLC target 0x40
          {0x4003, 1, 0x40},
                                           //Keep clock on during dummy lines
          {0x3107, 1, 0x01},
          {0x3c80, 1, 0x08},
          {0x3c83, 1, 0xb1},
          {0x3c8c, 1, 0x10},
          {0x3c8d, 1, 0x00},
          {0x3c90, 1, 0x00},
          {0x3c94, 1, 0x00},
          {0x3c95, 1, 0x00},
          {0x3c96, 1, 0x00},
                                           //for OTP autoload
          {0x3d8c, 1, 0x71},               // Header address high byte
          {0x3d8d, 1, 0xE7},               // Header address low byte
                                           //PSRR improvement
          {0x37cb, 1, 0x09},
          {0x37cc, 1, 0x15},
          {0x37cd, 1, 0x1f},
          {0x37ce, 1, 0x1f},
          {0x3020, 1, 0x8b} //sccb_id2_nack disable. when enable the sensor dos not answer to the common address 0x42. approved by system&HW team

};

const GEN_SENSOR_DRVG_regTblParamsT OV5670_CFG_TBLG_stereo_hd_configTable_1920_1080[] =
{
   {0x0100, 1, 0x00},
#ifndef OV5675_OV8856_WORKAROUND
   {0x0103, 1, 0x01},
#endif
   {0x0300, 1, 0x05},
   {0x0302, 1, 0x96},
   {0x0303, 1, 0x00},
   {0x3002, 1, 0x21},
   {0x3107, 1, 0x23},
   {0x3500, 1, 0x00},
   {0x3501, 1, 0x00},
   {0x3502, 1, 0x20},
   {0x3503, 1, 0x0c},
   {0x3508, 1, 0x00},
   {0x3509, 1, 0x80},
   {0x3600, 1, 0x66},
   {0x3602, 1, 0x30},
   {0x3610, 1, 0xa5},
   {0x3612, 1, 0x93},
   {0x3620, 1, 0x80},
   {0x3642, 1, 0x0e},
   {0x3661, 1, 0x00},
   {0x3662, 1, 0x10},
   {0x3664, 1, 0xf3},
   {0x3665, 1, 0x9e},
   {0x3667, 1, 0xa5},
   {0x366e, 1, 0x55},
   {0x366f, 1, 0x55},
   {0x3670, 1, 0x11},
   {0x3671, 1, 0x11},
   {0x3672, 1, 0x11},
   {0x3673, 1, 0x11},
   {0x3714, 1, 0x24},
   {0x371a, 1, 0x3e},
   {0x3733, 1, 0x10},
   {0x3734, 1, 0x00},
   {0x373d, 1, 0x24},
   {0x3764, 1, 0x20},
   {0x3765, 1, 0x20},
   {0x3766, 1, 0x12},
   {0x37a1, 1, 0x14},
   {0x37a8, 1, 0x1c},
   {0x37ab, 1, 0x0f},
   {0x37c2, 1, 0x04},
   {0x37cb, 1, 0x00},
   {0x37cc, 1, 0x00},
   {0x37cd, 1, 0x00},
   {0x37ce, 1, 0x00},
   {0x37d8, 1, 0x02},
   {0x37d9, 1, 0x08},
   {0x37dc, 1, 0x04},
   {0x3800, 1, 0x01},
   {0x3801, 1, 0x50},
   {0x3802, 1, 0x01},
   {0x3803, 1, 0xbc},
   {0x3804, 1, 0x08},
   {0x3805, 1, 0xef},
   {0x3806, 1, 0x05},
   {0x3807, 1, 0xfb},
   {0x3808, 1, 0x07},
   {0x3809, 1, 0x80},
   {0x380a, 1, 0x04},
   {0x380b, 1, 0x38},
   {0x380c, 1, 0x02},
   {0x380d, 1, 0xEF},//94
   {0x380e, 1, 0x04},
   {0x380f, 1, 0x70},
   {0x3811, 1, 0x10},
   {0x3813, 1, 0x04},
   {0x3814, 1, 0x01},
   {0x3815, 1, 0x01},
   {0x3816, 1, 0x01},
   {0x3817, 1, 0x01},
   {0x381e, 1, 0x02},
   {0x3820, 1, 0x88},
   {0x3821, 1, 0x01},
   {0x3832, 1, 0x04},
   {0x3c80, 1, 0x01},
   {0x3c82, 1, 0x00},
   {0x3c83, 1, 0xc8},
   {0x3c8c, 1, 0x0f},
   {0x3c8d, 1, 0xa0},
   {0x3c90, 1, 0x07},
   {0x3c91, 1, 0x00},
   {0x3c92, 1, 0x00},
   {0x3c93, 1, 0x00},
   {0x3c94, 1, 0xd0},
   {0x3c95, 1, 0x50},
   {0x3c96, 1, 0x35},
   {0x3c97, 1, 0x00},
   {0x4001, 1, 0xe0},
   {0x4008, 1, 0x02},
   {0x4009, 1, 0x0d},
   {0x400f, 1, 0x80},
   {0x4013, 1, 0x02},
   {0x4040, 1, 0x00},
   {0x4041, 1, 0x07},
   {0x404c, 1, 0x50},
   {0x404e, 1, 0x20},
   {0x4500, 1, 0x06},
   {0x4503, 1, 0x00},
   {0x450a, 1, 0x04},
   {0x4809, 1, 0x04},
   {0x480c, 1, 0x12},
   {0x4819, 1, 0x70},
   {0x4825, 1, 0x32},
   {0x4826, 1, 0x32},
   {0x482a, 1, 0x06},
   {0x4833, 1, 0x08},
   {0x4837, 1, 0x0d},
   {0x5000, 1, 0x77},
   {0x5b00, 1, 0x01},
   {0x5b01, 1, 0x10},
   {0x5b02, 1, 0x01},
   {0x5b03, 1, 0xdb},
   {0x5b05, 1, 0x6c},
   {0x5e10, 1, 0xfc},

                                    //max exposure is (VTS-4)/2
                                    //expo is twice as before. Ex. [3501,3502]=0040 means 8 Tline exposure.
   {0x3500, 1, 0x00},
   {0x3501, 1, 0x00},                                           //max expo= ([380e,380f]-4)/2.
   {0x3502, 1, 0x10},
                                    //8xgain
   {0x3503, 1, 0x08},                                           //[2]=0 real gain
   {0x3508, 1, 0x00},                                           //
   {0x3509, 1, 0x80},                                           //[3508,3509]=0x0080 is 1xgain
                                    //Vsync
   {0x3832, 1, 0x48},                                           // [7:4]vsync_width                                            // R3002[5] p_fsin_oen
                                    //MIPI
   {0x3c90, 1, 0x00},                                           //MIPI Continuous mode (07 Gated mode)
                                    //Strong DPC1.53
   {0x5780, 1, 0x3e},
   {0x5781, 1, 0x0f},
   {0x5782, 1, 0x44},
   {0x5783, 1, 0x02},
   {0x5784, 1, 0x01},
   {0x5785, 1, 0x01},
   {0x5786, 1, 0x00},
   {0x5787, 1, 0x04},
   {0x5788, 1, 0x02},
   {0x5789, 1, 0x0f},
   {0x578a, 1, 0xfd},
   {0x578b, 1, 0xf5},
   {0x578c, 1, 0xf5},
   {0x578d, 1, 0x03},
   {0x578e, 1, 0x08},
   {0x578f, 1, 0x0c},
   {0x5790, 1, 0x08},
   {0x5791, 1, 0x06},
   {0x5792, 1, 0x00},
   {0x5793, 1, 0x52},
   {0x5794, 1, 0xa3},
                                    //BLC target 0x40
   {0x4003, 1, 0x40},
                                    //Keep clock on during dummy lines
   {0x3107, 1, 0x01},
   {0x3c80, 1, 0x08},
   {0x3c83, 1, 0xb1},
   {0x3c8c, 1, 0x10},
   {0x3c8d, 1, 0x00},
   {0x3c90, 1, 0x00},
   {0x3c94, 1, 0x00},
   {0x3c95, 1, 0x00},
   {0x3c96, 1, 0x00},
                                    //for OTP autoload
   {0x3d8c, 1, 0x71},                                           // Header address high byte
   {0x3d8d, 1, 0xE7},                                           // Header address low byte
                                    //PSRR improvement
   {0x37cb, 1, 0x09},
   {0x37cc, 1, 0x15},
   {0x37cd, 1, 0x1f},
   {0x37ce, 1, 0x1f},
   {0x3020, 1, 0x8b} //sccb_id2_nack disable. when enable the sensor dos not answer to the common address 0x42. approved by system&HW team

};

const GEN_SENSOR_DRVG_regTblParamsT OV5675_CFG_TBLG_stereo_vertical_binning_configTable[] =
{

        {0x0100, 1, 0x00},
#ifndef OV5675_OV8856_WORKAROUND
        {0x0103, 1, 0x01},
#endif
        {0x0300, 1, 0x05},
        {0x0302, 1, 0x96},
        {0x0303, 1, 0x00},
        {0x3002, 1, 0x21},
        {0x3107, 1, 0x23},
        {0x3501, 1, 0x20},
        {0x3503, 1, 0x0c},
        {0x3508, 1, 0x03},
        {0x3509, 1, 0x00},
        {0x3600, 1, 0x66},
        {0x3602, 1, 0x30},
        {0x3610, 1, 0xa5},
        {0x3612, 1, 0x93},
        {0x3620, 1, 0x80},
        {0x3642, 1, 0x0e},
        {0x3661, 1, 0x00},
        {0x3662, 1, 0x10},
        {0x3664, 1, 0xf3},
        {0x3665, 1, 0x9e},
        {0x3667, 1, 0xa5},
        {0x366e, 1, 0x55},
        {0x366f, 1, 0x55},
        {0x3670, 1, 0x11},
        {0x3671, 1, 0x11},
        {0x3672, 1, 0x11},
        {0x3673, 1, 0x11},
        {0x3714, 1, 0x24},
        {0x371a, 1, 0x3e},
        {0x3733, 1, 0x10},
        {0x3734, 1, 0x00},
        {0x373d, 1, 0x24},
        {0x3764, 1, 0x20},
        {0x3765, 1, 0x20},
        {0x3766, 1, 0x12},
        {0x37a1, 1, 0x14},
        {0x37a8, 1, 0x1c},
        {0x37ab, 1, 0x0f},
        {0x37c2, 1, 0x04},
        {0x37cb, 1, 0x00},
        {0x37cc, 1, 0x00},
        {0x37cd, 1, 0x00},
        {0x37ce, 1, 0x00},
        {0x37d8, 1, 0x02},
        {0x37d9, 1, 0x08},
        {0x37dc, 1, 0x04},
        {0x3800, 1, 0x01},
        {0x3801, 1, 0x50},
        {0x3802, 1, 0x01},
        {0x3803, 1, 0xbc},
        {0x3804, 1, 0x08},
        {0x3805, 1, 0xef},
        {0x3806, 1, 0x05},
        {0x3807, 1, 0xfb},
        {0x3808, 1, 0x07},
        {0x3809, 1, 0x80},
        {0x380a, 1, 0x04},
        {0x380b, 1, 0x38},
        {0x380c, 1, 0x02},
        {0x380d, 1, 0x94},
        {0x380e, 1, 0x04},
        {0x380f, 1, 0x70},
        {0x3811, 1, 0x10},
        {0x3813, 1, 0x04},
        {0x3814, 1, 0x01},
        {0x3815, 1, 0x01},
        {0x3816, 1, 0x01},
        {0x3817, 1, 0x01},
        {0x381e, 1, 0x02},
        {0x3820, 1, 0x88},
        {0x3821, 1, 0x01},
        {0x3832, 1, 0x04},
        {0x3c80, 1, 0x01},
        {0x3c82, 1, 0x00},
        {0x3c83, 1, 0xc8},
        {0x3c8c, 1, 0x0f},
        {0x3c8d, 1, 0xa0},
        {0x3c90, 1, 0x07},
        {0x3c91, 1, 0x00},
        {0x3c92, 1, 0x00},
        {0x3c93, 1, 0x00},
        {0x3c94, 1, 0xd0},
        {0x3c95, 1, 0x50},
        {0x3c96, 1, 0x35},
        {0x3c97, 1, 0x00},
        {0x4001, 1, 0xe0},
        {0x4008, 1, 0x02},
        {0x4009, 1, 0x0d},
        {0x400f, 1, 0x80},
        {0x4013, 1, 0x02},
        {0x4040, 1, 0x00},
        {0x4041, 1, 0x07},
        {0x404c, 1, 0x50},
        {0x404e, 1, 0x20},
        {0x4500, 1, 0x06},
        {0x4503, 1, 0x00},
        {0x450a, 1, 0x04},
        {0x4809, 1, 0x04},
        {0x480c, 1, 0x12},
        {0x4819, 1, 0x70},
        {0x4825, 1, 0x32},
        {0x4826, 1, 0x32},
        {0x482a, 1, 0x06},
        {0x4833, 1, 0x08},
        {0x4837, 1, 0x0d},
        {0x5000, 1, 0x77},
        {0x5b00, 1, 0x01},
        {0x5b01, 1, 0x10},
        {0x5b02, 1, 0x01},
        {0x5b03, 1, 0xdb},
        {0x5b05, 1, 0x6c},
        {0x5e10, 1, 0xfc},

                                         //max exposure is (VTS-4)/2
                                         //expo is twice as before. Ex. [3501,3502]=0040 means 8 Tline exposure.
        {0x3500, 1, 0x00},
        {0x3501, 1, 0x23},                                           //max expo= ([380e,380f]-4)/2.
        {0x3502, 1, 0x60},
                                         //8xgain
        {0x3503, 1, 0x08},                                           //[2]=0 real gain
        {0x3508, 1, 0x04},                                           //
        {0x3509, 1, 0x00},                                           //[3508,3509]=0x0080 is 1xgain
                                         //Vsync
        {0x3832, 1, 0x48},                                           // [7:4]vsync_width                                            // R3002[5] p_fsin_oen
                                         //MIPI
        {0x3c90, 1, 0x00},                                           //MIPI Continuous mode (07 Gated mode)
                                         //Strong DPC1.53
        {0x5780, 1, 0x3e},
        {0x5781, 1, 0x0f},
        {0x5782, 1, 0x44},
        {0x5783, 1, 0x02},
        {0x5784, 1, 0x01},
        {0x5785, 1, 0x01},
        {0x5786, 1, 0x00},
        {0x5787, 1, 0x04},
        {0x5788, 1, 0x02},
        {0x5789, 1, 0x0f},
        {0x578a, 1, 0xfd},
        {0x578b, 1, 0xf5},
        {0x578c, 1, 0xf5},
        {0x578d, 1, 0x03},
        {0x578e, 1, 0x08},
        {0x578f, 1, 0x0c},
        {0x5790, 1, 0x08},
        {0x5791, 1, 0x06},
        {0x5792, 1, 0x00},
        {0x5793, 1, 0x52},
        {0x5794, 1, 0xa3},
                                         //BLC target 0x40
        {0x4003, 1, 0x40},
                                         //Keep clock on during dummy lines
        {0x3107, 1, 0x01},
        {0x3c80, 1, 0x08},
        {0x3c83, 1, 0xb1},
        {0x3c8c, 1, 0x10},
        {0x3c8d, 1, 0x00},
        {0x3c90, 1, 0x00},
        {0x3c94, 1, 0x00},
        {0x3c95, 1, 0x00},
        {0x3c96, 1, 0x00},
                                         //for OTP autoload
        {0x3d8c, 1, 0x71},                                           // Header address high byte
        {0x3d8d, 1, 0xE7},                                           // Header address low byte
                                         //PSRR improvement
        {0x37cb, 1, 0x09},
        {0x37cc, 1, 0x15},
        {0x37cd, 1, 0x1f},
        {0x37ce, 1, 0x1f}
};


const GEN_SENSOR_DRVG_regTblParamsT OV5675_CFG_TBLG_single_configTable[] =
{};









#ifdef __cplusplus
}
#endif


#endif 


