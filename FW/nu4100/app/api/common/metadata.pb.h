/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7-dev */

#ifndef PB_INU_METADATA_METADATA_PB_H_INCLUDED
#define PB_INU_METADATA_METADATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _INU_metadata_HardwareType {
    INU_metadata_HardwareType_MASTER = 0,
    INU_metadata_HardwareType_SLAVE = 1,
    INU_metadata_HardwareType_HOST = 2
} INU_metadata_HardwareType;

typedef enum _INU_metadata_Channel_Side {
    INU_metadata_Channel_Side_Left = 0,
    INU_metadata_Channel_Side_Right = 1
} INU_metadata_Channel_Side;

typedef enum _INU_metadata_Channel_Scale {
    INU_metadata_Channel_Scale_Normal = 0,
    INU_metadata_Channel_Scale_Cropped = 1,
    INU_metadata_Channel_Scale_Downscaled = 2
} INU_metadata_Channel_Scale;

typedef enum _INU_metadata_SensorType {
    INU_metadata_SensorType_AF_VST = 0,
    INU_metadata_SensorType_Gaze = 1,
    INU_metadata_SensorType_Tracking = 2,
    INU_metadata_SensorType_FF_VST = 3,
    INU_metadata_SensorType_TOF = 4,
    INU_metadata_SensorType_Gaze_ROI = 5, /* We need a different name for the Gaze_ROI metadata channel so that ROI updates can be triggered by the frame done callback from the Gaze_ROI DMA channel */
    INU_metadata_SensorType_CVA = 6 /* CVA sensorType */
} INU_metadata_SensorType;

typedef enum _INU_metadata_SLU {
    INU_metadata_SLU_SLU_0 = 0,
    INU_metadata_SLU_SLU_1 = 1,
    INU_metadata_SLU_SLU_2 = 2,
    INU_metadata_SLU_SLU_3 = 3,
    INU_metadata_SLU_SLU_4 = 4,
    INU_metadata_SLU_SLU_5 = 5
} INU_metadata_SLU;

typedef enum _INU_metadata_command_type {
    INU_metadata_command_type_read = 0,
    INU_metadata_command_type_write = 1
} INU_metadata_command_type;

typedef enum _INU_metadata_Context {
    INU_metadata_Context_Context_A = 0,
    INU_metadata_Context_Context_B = 1
} INU_metadata_Context;

typedef enum _INU_metadata_IMU_Batching_Method {
    INU_metadata_IMU_Batching_Method_Individual_Channel_Batching = 0, /* This is the original batching method where Gyro/Accelerometer/Magnetometer samples are sent seperately */
    INU_metadata_IMU_Batching_Method_Paired_Gyro_Accelerometer_Channel_Batching = 1 /* This is the improved batching method where Gyro/Accelerometer samples are paired together using timestamps and then sent together */
} INU_metadata_IMU_Batching_Method;

/* Struct definitions */
typedef struct _INU_metadata_AFCropPositon {
    uint32_t StartX;
    uint32_t StartY;
} INU_metadata_AFCropPositon;

typedef struct _INU_metadata_AFFocusPosition {
    int32_t AFFocusPosition;
} INU_metadata_AFFocusPosition;

typedef struct _INU_metadata_CCM_In_use {
    uint32_t CCM_In_use;
} INU_metadata_CCM_In_use;

/* This messages allows you to wait until a SLU SOF interrupt has happened before processing the message
This allows you do the following:
Wait until the next start of frame interrupt for an SLU
Repeat the message over UART when that happens
Now both Nu4Ks will process the command at the same time (assuming that the triggers are synchronized) */
typedef struct _INU_metadata_Command_Sync {
    INU_metadata_SLU slu_number; /* SLU Number to wait for the SOF interrupt to happen */
    bool wait_for_slu_SOF_Interrupt; /* True to wait for the SOF interrupt before processing the command */
    uint32_t cmd_id; /* Here you can place a unique command ID so that you can track when the metadata update was applied */
    uint32_t frameID;
} INU_metadata_Command_Sync;

typedef struct _INU_metadata_ContrastValue {
    uint32_t ContrastValue;
} INU_metadata_ContrastValue;

typedef struct _INU_metadata_EVCompensation {
    uint32_t EVCompensation;
} INU_metadata_EVCompensation;

typedef struct _INU_metadata_EdgeEnhancement {
    uint32_t EdgeEnhancement;
} INU_metadata_EdgeEnhancement;

typedef struct _INU_metadata_Exposure {
    uint32_t exposure;
} INU_metadata_Exposure;

typedef struct _INU_metadata_FlickerCompensation {
    uint32_t FlickerCompensation;
} INU_metadata_FlickerCompensation;

typedef struct _INU_metadata_FrameCounter {
    uint64_t counter;
} INU_metadata_FrameCounter;

typedef struct _INU_metadata_FrameID {
    uint32_t frameID;
} INU_metadata_FrameID;

typedef struct _INU_metadata_FrameRate {
    uint32_t FrameRate;
} INU_metadata_FrameRate;

typedef struct _INU_metadata_Gain {
    float analogue_gain;
    float digital_gain;
} INU_metadata_Gain;

typedef struct _INU_metadata_IMU_Batching {
    INU_metadata_IMU_Batching_Method batchingMethod;
} INU_metadata_IMU_Batching;

typedef struct _INU_metadata_ISO {
    uint32_t ISO;
} INU_metadata_ISO;

typedef struct _INU_metadata_ISP_AE {
    bool metadataEnableAE; /* False = AE enabled, True = AE disabled - This variable is the same as the one in the 3A file */
} INU_metadata_ISP_AE;

typedef struct _INU_metadata_ISP_AE_closedLoop {
    bool ae_closedLoop; /* True = Closed loop, false = Open Loop */
} INU_metadata_ISP_AE_closedLoop;

typedef struct _INU_metadata_ISP_AWB {
    bool metadataEnableAWB; /* False = AWB enabled, True = AWB disabled - This variable is the same as the one in the 3A file */
} INU_metadata_ISP_AWB;

typedef struct _INU_metadata_ISP_AWB_closedLoop {
    bool awb_closedLoop; /* True = Closed loop, false = Open Loop */
} INU_metadata_ISP_AWB_closedLoop;

typedef struct _INU_metadata_ISP_ColourCorrectionCoefficient {
    pb_size_t coeff_count;
    float coeff[9]; /* Colour correction coefficients */
} INU_metadata_ISP_ColourCorrectionCoefficient;

typedef struct _INU_metadata_ISP_ColourCorrectionOffset {
    int32_t red;
    int32_t green;
    int32_t blue;
} INU_metadata_ISP_ColourCorrectionOffset;

typedef struct _INU_metadata_ISP_WBGain {
    float gainR; /* Red gain */
    float gainGr; /* Green-Red gain */
    float gainGb; /* Green-Blue gain */
    float gainB; /* Blue gain */
} INU_metadata_ISP_WBGain;

typedef struct _INU_metadata_Manual_Sensor_Command {
    INU_metadata_command_type cmd_type; /* Command type */
    uint32_t register_address; /* Register address */
    pb_byte_t register_data[2]; /* Register data to write or read */
    uint32_t frame_delays; /* Number of frames this command will take effect in */
} INU_metadata_Manual_Sensor_Command;

typedef struct _INU_metadata_NoiseReduction {
    uint32_t NoiseReduction;
} INU_metadata_NoiseReduction;

typedef struct _INU_metadata_RGBHistogram {
    uint32_t RGBHistogram;
} INU_metadata_RGBHistogram;

typedef struct _INU_metadata_ROI {
    uint32_t x_start; /* X start location coordinate */
    uint32_t y_start; /* Y start location coordinate */
} INU_metadata_ROI;

typedef struct _INU_metadata_RTC_Timestamp {
    uint32_t seconds; /* RTC based timestamp (seconds part) */
    uint32_t fracSeconds; /* RTC based timestamp (fractional seconds part) */
} INU_metadata_RTC_Timestamp;

typedef struct _INU_metadata_Sensor_ID {
    uint32_t sensorID; /* Only messages from the target will send this */
} INU_metadata_Sensor_ID;

typedef struct _INU_metadata_Sharpness {
    uint32_t Sharpness;
} INU_metadata_Sharpness;

typedef struct _INU_metadata_Timestamp {
    uint64_t nanoseconds; /* (Software measured from  Kernel Get Time call, suffers from Jitter,
NOTE THIS IS NOT IN SYNC WITH THE RTC */
} INU_metadata_Timestamp;

typedef struct _INU_metadata_UART_Debug {
    uint64_t rxCounter; /* Number of messages received over UART */
    uint64_t txCounter; /* Number of messages transmitted over UART */
    uint64_t txTransmitTime_ns; /* Time it took to transmit the last sensor update over UART (nanoseconds) */
    uint64_t crcErrors; /* Number of CRC errors received */
    uint64_t lastSyncPacketTimestamp_us; /* Timestamp in microseconds when the last sync packet was received */
} INU_metadata_UART_Debug;

typedef struct _INU_metadata_WhiteBalance_Temperature {
    uint32_t whitebalance_temperature;
} INU_metadata_WhiteBalance_Temperature;

/* Debugging information for working out if metadata/frames are in sync */
typedef struct _INU_metadata_Debug_Timing_Information {
    bool has_timestamp;
    INU_metadata_Timestamp timestamp;
    bool has_frameID;
    INU_metadata_FrameID frameID;
} INU_metadata_Debug_Timing_Information;

/* For the sake of consistency with other streams, we have a pipeline to process IMU timestamps and convert them into RTC timestamps
The calculation is as follows:
1. [TARGET]When the IMU is started, the RTC time is recorded into ts_ns in nanoseconds and sent to the host as usual 
2. [TARGET] For every new IMU sample, the userspace RTC timestamp is recorded into userspace_timestamp_ns and userspace_timestamp
3. [HOST] For every new timestamp from the IMU,resultant_imu_timestamp_ns is calculated based off ts_ns+start_imu_timestamp_ns


For debug I have added in userspace_timestamp which is the timestamp of when the userspace thread runs to read the IMU data
If all is well, userspace_timestamp should be very close to converted_imu_timestamp */
typedef struct _INU_metadata_IMU_Timestamp {
    uint64_t userspace_timestamp_ns; /* Timestamp measured in userspace(nanoseconds) when IMU data has been read */
    bool has_userspace_timestamp;
    INU_metadata_RTC_Timestamp userspace_timestamp; /* Timestamp measured in userspace when IMU data has been read */
    uint64_t start_imu_timestamp_ns; /* Starting IMU timestamp (nanoseconds) measured from the RTC */
} INU_metadata_IMU_Timestamp;

typedef struct _INU_metadata_ISP_ExpoParams {
    float integrationTime; /* Integration time (seconds) */
    float analogGain; /* Analgoue gain of the sensor */
    float ispGain; /* Digital gain of the ISP */
    bool has_ispAE;
    INU_metadata_ISP_AE ispAE; /* Enable or disable auto exposure */
    bool has_ispAEclosedLoop;
    INU_metadata_ISP_AE_closedLoop ispAEclosedLoop; /* Enable or disabled cloosed loop AE */
    bool has_uart_sync;
    INU_metadata_Command_Sync uart_sync; /* Used for delaying the message until the next SOF interrupt. */
} INU_metadata_ISP_ExpoParams;

typedef struct _INU_metadata_ISP_WBPameters {
    bool has_wbGains;
    INU_metadata_ISP_WBGain wbGains;
    bool has_colourcorrection;
    INU_metadata_ISP_ColourCorrectionOffset colourcorrection;
    bool has_colourcorrectinCoefficients;
    INU_metadata_ISP_ColourCorrectionCoefficient colourcorrectinCoefficients;
    bool has_ispAWB;
    INU_metadata_ISP_AWB ispAWB;
    bool has_ispAWBclosedLoop;
    INU_metadata_ISP_AWB_closedLoop ispAWBclosedLoop;
} INU_metadata_ISP_WBPameters;

typedef struct _INU_metadata_Sensor {
    INU_metadata_Channel_Side side;
    INU_metadata_SensorType sensorType;
    bool has_sensorID;
    INU_metadata_Sensor_ID sensorID;
    INU_metadata_Channel_Scale channelScale;
} INU_metadata_Sensor;

typedef struct _INU_metadata_Debug {
    bool has_sensor_update_rx_timing;
    INU_metadata_Debug_Timing_Information sensor_update_rx_timing; /* Timestamp+FrameID of when the sensor update  was received from the Host */
    bool has_sensor_updateSOFInterrupt;
    INU_metadata_Debug_Timing_Information sensor_updateSOFInterrupt; /* Timestamp of when the SOF happened */
    bool has_sensor_update_dequed_timing;
    INU_metadata_Debug_Timing_Information sensor_update_dequed_timing; /* Timestamp+FrameID of when the sensor update was dequed (AT the SOF interrupt ) */
    bool has_sensor_update_i2cWritesComplete;
    INU_metadata_Debug_Timing_Information sensor_update_i2cWritesComplete; /* Timestmap+FrameID of when the i2c writes were complete (sensor_update_dequed_timing + i2c write time) */
} INU_metadata_Debug;

typedef struct _INU_metadata_Sensor_MetaData {
    bool has_frameCounter;
    INU_metadata_FrameCounter frameCounter; /* Frame counter */
    bool has_ISO;
    INU_metadata_ISO ISO; /* Sensor ISO */
    bool has_exposure;
    INU_metadata_Exposure exposure; /* Sensor exposure */
    bool has_gain;
    INU_metadata_Gain gain; /* Sensor gain */
    bool has_Timestamp;
    INU_metadata_Timestamp Timestamp; /* Timestamp when the command was processed */
    bool has_AFCropPositon;
    INU_metadata_AFCropPositon AFCropPositon; /* AF Crop position */
    bool has_AFFocusPosition;
    INU_metadata_AFFocusPosition AFFocusPosition; /* AF focus position */
    bool has_roi;
    INU_metadata_ROI roi; /* Region of interest commands are only relevant for the Gaze sensors */
    bool has_wb;
    INU_metadata_ISP_WBPameters wb; /* ISP white balance parameters */
    bool has_isp_expo;
    INU_metadata_ISP_ExpoParams isp_expo; /* ISP exposure parameters */
} INU_metadata_Sensor_MetaData;

typedef struct _INU_metadata_State {
    bool has_timestamp_ns;
    INU_metadata_Timestamp timestamp_ns; /* Timestamp of this packet [so that we can directly place this in metadata memory] */
    INU_metadata_HardwareType sender; /* Sender of this packet */
    INU_metadata_HardwareType target; /* Target of this packet */
    bool has_sensor;
    INU_metadata_Sensor sensor; /* Sensor that we're reporting on or updating */
    bool has_sensor_metadata;
    INU_metadata_Sensor_MetaData sensor_metadata; /* Metadata for this sensor that we're reporting on or updating */
    pb_size_t man_command_count;
    INU_metadata_Manual_Sensor_Command man_command[1]; /* Manual sensor command */
    INU_metadata_Context context; /* Context to update for */
    bool has_snsr_update_timing;
    INU_metadata_Debug snsr_update_timing; /* Debug information */
} INU_metadata_State;

/* This message is sent both by the target and the host, when it's sent from the host it's a sensor update request, when it's from the target it's metadata information */
typedef struct _INU_metadata_TopLevel {
    uint64_t metadatacounter; /* Incremented everytime a new protobuf packet is encoded */
    bool has_timestamp_ns;
    INU_metadata_Timestamp timestamp_ns; /* Timestamp of the packet (ns) */
    uint32_t protocol_version; /* Protocol version */
    pb_size_t state_count;
    INU_metadata_State state[4]; /* Array of State records */
    INU_metadata_HardwareType sender; /* Who serialized this complete message */
    pb_size_t sensors_count;
    INU_metadata_Sensor sensors[2]; /* Which sensors this metadata originates from */
    bool has_uartDebug;
    INU_metadata_UART_Debug uartDebug; /* Debug information for the Master<->Slave UART interconnect */
    bool has_imuTimestamp;
    INU_metadata_IMU_Timestamp imuTimestamp; /* IMU timestamp information */
    bool has_imuBatchInfo;
    INU_metadata_IMU_Batching imuBatchInfo; /* Contains information about a batch */
} INU_metadata_TopLevel;


/* Helper constants for enums */
#define _INU_metadata_HardwareType_MIN INU_metadata_HardwareType_MASTER
#define _INU_metadata_HardwareType_MAX INU_metadata_HardwareType_HOST
#define _INU_metadata_HardwareType_ARRAYSIZE ((INU_metadata_HardwareType)(INU_metadata_HardwareType_HOST+1))

#define _INU_metadata_Channel_Side_MIN INU_metadata_Channel_Side_Left
#define _INU_metadata_Channel_Side_MAX INU_metadata_Channel_Side_Right
#define _INU_metadata_Channel_Side_ARRAYSIZE ((INU_metadata_Channel_Side)(INU_metadata_Channel_Side_Right+1))

#define _INU_metadata_Channel_Scale_MIN INU_metadata_Channel_Scale_Normal
#define _INU_metadata_Channel_Scale_MAX INU_metadata_Channel_Scale_Downscaled
#define _INU_metadata_Channel_Scale_ARRAYSIZE ((INU_metadata_Channel_Scale)(INU_metadata_Channel_Scale_Downscaled+1))

#define _INU_metadata_SensorType_MIN INU_metadata_SensorType_AF_VST
#define _INU_metadata_SensorType_MAX INU_metadata_SensorType_CVA
#define _INU_metadata_SensorType_ARRAYSIZE ((INU_metadata_SensorType)(INU_metadata_SensorType_CVA+1))

#define _INU_metadata_SLU_MIN INU_metadata_SLU_SLU_0
#define _INU_metadata_SLU_MAX INU_metadata_SLU_SLU_5
#define _INU_metadata_SLU_ARRAYSIZE ((INU_metadata_SLU)(INU_metadata_SLU_SLU_5+1))

#define _INU_metadata_command_type_MIN INU_metadata_command_type_read
#define _INU_metadata_command_type_MAX INU_metadata_command_type_write
#define _INU_metadata_command_type_ARRAYSIZE ((INU_metadata_command_type)(INU_metadata_command_type_write+1))

#define _INU_metadata_Context_MIN INU_metadata_Context_Context_A
#define _INU_metadata_Context_MAX INU_metadata_Context_Context_B
#define _INU_metadata_Context_ARRAYSIZE ((INU_metadata_Context)(INU_metadata_Context_Context_B+1))

#define _INU_metadata_IMU_Batching_Method_MIN INU_metadata_IMU_Batching_Method_Individual_Channel_Batching
#define _INU_metadata_IMU_Batching_Method_MAX INU_metadata_IMU_Batching_Method_Paired_Gyro_Accelerometer_Channel_Batching
#define _INU_metadata_IMU_Batching_Method_ARRAYSIZE ((INU_metadata_IMU_Batching_Method)(INU_metadata_IMU_Batching_Method_Paired_Gyro_Accelerometer_Channel_Batching+1))


#define INU_metadata_Sensor_side_ENUMTYPE INU_metadata_Channel_Side
#define INU_metadata_Sensor_sensorType_ENUMTYPE INU_metadata_SensorType
#define INU_metadata_Sensor_channelScale_ENUMTYPE INU_metadata_Channel_Scale



























#define INU_metadata_Command_Sync_slu_number_ENUMTYPE INU_metadata_SLU


#define INU_metadata_Manual_Sensor_Command_cmd_type_ENUMTYPE INU_metadata_command_type





#define INU_metadata_State_sender_ENUMTYPE INU_metadata_HardwareType
#define INU_metadata_State_target_ENUMTYPE INU_metadata_HardwareType
#define INU_metadata_State_context_ENUMTYPE INU_metadata_Context

#define INU_metadata_TopLevel_sender_ENUMTYPE INU_metadata_HardwareType


#define INU_metadata_IMU_Batching_batchingMethod_ENUMTYPE INU_metadata_IMU_Batching_Method




#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define INU_metadata_Sensor_ID_init_default      {0}
#define INU_metadata_Sensor_init_default         {_INU_metadata_Channel_Side_MIN, _INU_metadata_SensorType_MIN, false, INU_metadata_Sensor_ID_init_default, _INU_metadata_Channel_Scale_MIN}
#define INU_metadata_FrameCounter_init_default   {0}
#define INU_metadata_ISO_init_default            {0}
#define INU_metadata_Exposure_init_default       {0}
#define INU_metadata_Gain_init_default           {0, 0}
#define INU_metadata_WhiteBalance_Temperature_init_default {0}
#define INU_metadata_EVCompensation_init_default {0}
#define INU_metadata_FlickerCompensation_init_default {0}
#define INU_metadata_Sharpness_init_default      {0}
#define INU_metadata_NoiseReduction_init_default {0}
#define INU_metadata_FrameRate_init_default      {0}
#define INU_metadata_CCM_In_use_init_default     {0}
#define INU_metadata_AFCropPositon_init_default  {0, 0}
#define INU_metadata_AFFocusPosition_init_default {0}
#define INU_metadata_RGBHistogram_init_default   {0}
#define INU_metadata_ContrastValue_init_default  {0}
#define INU_metadata_EdgeEnhancement_init_default {0}
#define INU_metadata_ROI_init_default            {0, 0}
#define INU_metadata_ISP_WBGain_init_default     {0, 0, 0, 0}
#define INU_metadata_ISP_ColourCorrectionOffset_init_default {0, 0, 0}
#define INU_metadata_ISP_AWB_closedLoop_init_default {0}
#define INU_metadata_ISP_AE_closedLoop_init_default {0}
#define INU_metadata_ISP_ColourCorrectionCoefficient_init_default {0, {0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define INU_metadata_ISP_AWB_init_default        {0}
#define INU_metadata_ISP_WBPameters_init_default {false, INU_metadata_ISP_WBGain_init_default, false, INU_metadata_ISP_ColourCorrectionOffset_init_default, false, INU_metadata_ISP_ColourCorrectionCoefficient_init_default, false, INU_metadata_ISP_AWB_init_default, false, INU_metadata_ISP_AWB_closedLoop_init_default}
#define INU_metadata_ISP_AE_init_default         {0}
#define INU_metadata_ISP_ExpoParams_init_default {0, 0, 0, false, INU_metadata_ISP_AE_init_default, false, INU_metadata_ISP_AE_closedLoop_init_default, false, INU_metadata_Command_Sync_init_default}
#define INU_metadata_Command_Sync_init_default   {_INU_metadata_SLU_MIN, 0, 0, 0}
#define INU_metadata_Sensor_MetaData_init_default {false, INU_metadata_FrameCounter_init_default, false, INU_metadata_ISO_init_default, false, INU_metadata_Exposure_init_default, false, INU_metadata_Gain_init_default, false, INU_metadata_Timestamp_init_default, false, INU_metadata_AFCropPositon_init_default, false, INU_metadata_AFFocusPosition_init_default, false, INU_metadata_ROI_init_default, false, INU_metadata_ISP_WBPameters_init_default, false, INU_metadata_ISP_ExpoParams_init_default}
#define INU_metadata_Manual_Sensor_Command_init_default {_INU_metadata_command_type_MIN, 0, {0}, 0}
#define INU_metadata_Timestamp_init_default      {0}
#define INU_metadata_FrameID_init_default        {0}
#define INU_metadata_Debug_Timing_Information_init_default {false, INU_metadata_Timestamp_init_default, false, INU_metadata_FrameID_init_default}
#define INU_metadata_Debug_init_default          {false, INU_metadata_Debug_Timing_Information_init_default, false, INU_metadata_Debug_Timing_Information_init_default, false, INU_metadata_Debug_Timing_Information_init_default, false, INU_metadata_Debug_Timing_Information_init_default}
#define INU_metadata_State_init_default          {false, INU_metadata_Timestamp_init_default, _INU_metadata_HardwareType_MIN, _INU_metadata_HardwareType_MIN, false, INU_metadata_Sensor_init_default, false, INU_metadata_Sensor_MetaData_init_default, 0, {INU_metadata_Manual_Sensor_Command_init_default}, _INU_metadata_Context_MIN, false, INU_metadata_Debug_init_default}
#define INU_metadata_TopLevel_init_default       {0, false, INU_metadata_Timestamp_init_default, 0, 0, {INU_metadata_State_init_default, INU_metadata_State_init_default, INU_metadata_State_init_default, INU_metadata_State_init_default}, _INU_metadata_HardwareType_MIN, 0, {INU_metadata_Sensor_init_default, INU_metadata_Sensor_init_default}, false, INU_metadata_UART_Debug_init_default, false, INU_metadata_IMU_Timestamp_init_default, false, INU_metadata_IMU_Batching_init_default}
#define INU_metadata_UART_Debug_init_default     {0, 0, 0, 0, 0}
#define INU_metadata_IMU_Batching_init_default   {_INU_metadata_IMU_Batching_Method_MIN}
#define INU_metadata_IMU_Timestamp_init_default  {0, false, INU_metadata_RTC_Timestamp_init_default, 0}
#define INU_metadata_RTC_Timestamp_init_default  {0, 0}
#define INU_metadata_Sensor_ID_init_zero         {0}
#define INU_metadata_Sensor_init_zero            {_INU_metadata_Channel_Side_MIN, _INU_metadata_SensorType_MIN, false, INU_metadata_Sensor_ID_init_zero, _INU_metadata_Channel_Scale_MIN}
#define INU_metadata_FrameCounter_init_zero      {0}
#define INU_metadata_ISO_init_zero               {0}
#define INU_metadata_Exposure_init_zero          {0}
#define INU_metadata_Gain_init_zero              {0, 0}
#define INU_metadata_WhiteBalance_Temperature_init_zero {0}
#define INU_metadata_EVCompensation_init_zero    {0}
#define INU_metadata_FlickerCompensation_init_zero {0}
#define INU_metadata_Sharpness_init_zero         {0}
#define INU_metadata_NoiseReduction_init_zero    {0}
#define INU_metadata_FrameRate_init_zero         {0}
#define INU_metadata_CCM_In_use_init_zero        {0}
#define INU_metadata_AFCropPositon_init_zero     {0, 0}
#define INU_metadata_AFFocusPosition_init_zero   {0}
#define INU_metadata_RGBHistogram_init_zero      {0}
#define INU_metadata_ContrastValue_init_zero     {0}
#define INU_metadata_EdgeEnhancement_init_zero   {0}
#define INU_metadata_ROI_init_zero               {0, 0}
#define INU_metadata_ISP_WBGain_init_zero        {0, 0, 0, 0}
#define INU_metadata_ISP_ColourCorrectionOffset_init_zero {0, 0, 0}
#define INU_metadata_ISP_AWB_closedLoop_init_zero {0}
#define INU_metadata_ISP_AE_closedLoop_init_zero {0}
#define INU_metadata_ISP_ColourCorrectionCoefficient_init_zero {0, {0, 0, 0, 0, 0, 0, 0, 0, 0}}
#define INU_metadata_ISP_AWB_init_zero           {0}
#define INU_metadata_ISP_WBPameters_init_zero    {false, INU_metadata_ISP_WBGain_init_zero, false, INU_metadata_ISP_ColourCorrectionOffset_init_zero, false, INU_metadata_ISP_ColourCorrectionCoefficient_init_zero, false, INU_metadata_ISP_AWB_init_zero, false, INU_metadata_ISP_AWB_closedLoop_init_zero}
#define INU_metadata_ISP_AE_init_zero            {0}
#define INU_metadata_ISP_ExpoParams_init_zero    {0, 0, 0, false, INU_metadata_ISP_AE_init_zero, false, INU_metadata_ISP_AE_closedLoop_init_zero, false, INU_metadata_Command_Sync_init_zero}
#define INU_metadata_Command_Sync_init_zero      {_INU_metadata_SLU_MIN, 0, 0, 0}
#define INU_metadata_Sensor_MetaData_init_zero   {false, INU_metadata_FrameCounter_init_zero, false, INU_metadata_ISO_init_zero, false, INU_metadata_Exposure_init_zero, false, INU_metadata_Gain_init_zero, false, INU_metadata_Timestamp_init_zero, false, INU_metadata_AFCropPositon_init_zero, false, INU_metadata_AFFocusPosition_init_zero, false, INU_metadata_ROI_init_zero, false, INU_metadata_ISP_WBPameters_init_zero, false, INU_metadata_ISP_ExpoParams_init_zero}
#define INU_metadata_Manual_Sensor_Command_init_zero {_INU_metadata_command_type_MIN, 0, {0}, 0}
#define INU_metadata_Timestamp_init_zero         {0}
#define INU_metadata_FrameID_init_zero           {0}
#define INU_metadata_Debug_Timing_Information_init_zero {false, INU_metadata_Timestamp_init_zero, false, INU_metadata_FrameID_init_zero}
#define INU_metadata_Debug_init_zero             {false, INU_metadata_Debug_Timing_Information_init_zero, false, INU_metadata_Debug_Timing_Information_init_zero, false, INU_metadata_Debug_Timing_Information_init_zero, false, INU_metadata_Debug_Timing_Information_init_zero}
#define INU_metadata_State_init_zero             {false, INU_metadata_Timestamp_init_zero, _INU_metadata_HardwareType_MIN, _INU_metadata_HardwareType_MIN, false, INU_metadata_Sensor_init_zero, false, INU_metadata_Sensor_MetaData_init_zero, 0, {INU_metadata_Manual_Sensor_Command_init_zero}, _INU_metadata_Context_MIN, false, INU_metadata_Debug_init_zero}
#define INU_metadata_TopLevel_init_zero          {0, false, INU_metadata_Timestamp_init_zero, 0, 0, {INU_metadata_State_init_zero, INU_metadata_State_init_zero, INU_metadata_State_init_zero, INU_metadata_State_init_zero}, _INU_metadata_HardwareType_MIN, 0, {INU_metadata_Sensor_init_zero, INU_metadata_Sensor_init_zero}, false, INU_metadata_UART_Debug_init_zero, false, INU_metadata_IMU_Timestamp_init_zero, false, INU_metadata_IMU_Batching_init_zero}
#define INU_metadata_UART_Debug_init_zero        {0, 0, 0, 0, 0}
#define INU_metadata_IMU_Batching_init_zero      {_INU_metadata_IMU_Batching_Method_MIN}
#define INU_metadata_IMU_Timestamp_init_zero     {0, false, INU_metadata_RTC_Timestamp_init_zero, 0}
#define INU_metadata_RTC_Timestamp_init_zero     {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define INU_metadata_AFCropPositon_StartX_tag    1
#define INU_metadata_AFCropPositon_StartY_tag    2
#define INU_metadata_AFFocusPosition_AFFocusPosition_tag 1
#define INU_metadata_CCM_In_use_CCM_In_use_tag   1
#define INU_metadata_Command_Sync_slu_number_tag 1
#define INU_metadata_Command_Sync_wait_for_slu_SOF_Interrupt_tag 2
#define INU_metadata_Command_Sync_cmd_id_tag     3
#define INU_metadata_Command_Sync_frameID_tag    4
#define INU_metadata_ContrastValue_ContrastValue_tag 1
#define INU_metadata_EVCompensation_EVCompensation_tag 1
#define INU_metadata_EdgeEnhancement_EdgeEnhancement_tag 1
#define INU_metadata_Exposure_exposure_tag       1
#define INU_metadata_FlickerCompensation_FlickerCompensation_tag 1
#define INU_metadata_FrameCounter_counter_tag    1
#define INU_metadata_FrameID_frameID_tag         1
#define INU_metadata_FrameRate_FrameRate_tag     1
#define INU_metadata_Gain_analogue_gain_tag      1
#define INU_metadata_Gain_digital_gain_tag       2
#define INU_metadata_IMU_Batching_batchingMethod_tag 1
#define INU_metadata_ISO_ISO_tag                 1
#define INU_metadata_ISP_AE_metadataEnableAE_tag 1
#define INU_metadata_ISP_AE_closedLoop_ae_closedLoop_tag 1
#define INU_metadata_ISP_AWB_metadataEnableAWB_tag 4
#define INU_metadata_ISP_AWB_closedLoop_awb_closedLoop_tag 1
#define INU_metadata_ISP_ColourCorrectionCoefficient_coeff_tag 1
#define INU_metadata_ISP_ColourCorrectionOffset_red_tag 1
#define INU_metadata_ISP_ColourCorrectionOffset_green_tag 2
#define INU_metadata_ISP_ColourCorrectionOffset_blue_tag 3
#define INU_metadata_ISP_WBGain_gainR_tag        1
#define INU_metadata_ISP_WBGain_gainGr_tag       2
#define INU_metadata_ISP_WBGain_gainGb_tag       3
#define INU_metadata_ISP_WBGain_gainB_tag        4
#define INU_metadata_Manual_Sensor_Command_cmd_type_tag 1
#define INU_metadata_Manual_Sensor_Command_register_address_tag 2
#define INU_metadata_Manual_Sensor_Command_register_data_tag 3
#define INU_metadata_Manual_Sensor_Command_frame_delays_tag 4
#define INU_metadata_NoiseReduction_NoiseReduction_tag 1
#define INU_metadata_RGBHistogram_RGBHistogram_tag 1
#define INU_metadata_ROI_x_start_tag             1
#define INU_metadata_ROI_y_start_tag             2
#define INU_metadata_RTC_Timestamp_seconds_tag   1
#define INU_metadata_RTC_Timestamp_fracSeconds_tag 2
#define INU_metadata_Sensor_ID_sensorID_tag      1
#define INU_metadata_Sharpness_Sharpness_tag     1
#define INU_metadata_Timestamp_nanoseconds_tag   1
#define INU_metadata_UART_Debug_rxCounter_tag    1
#define INU_metadata_UART_Debug_txCounter_tag    2
#define INU_metadata_UART_Debug_txTransmitTime_ns_tag 3
#define INU_metadata_UART_Debug_crcErrors_tag    4
#define INU_metadata_UART_Debug_lastSyncPacketTimestamp_us_tag 5
#define INU_metadata_WhiteBalance_Temperature_whitebalance_temperature_tag 1
#define INU_metadata_Debug_Timing_Information_timestamp_tag 1
#define INU_metadata_Debug_Timing_Information_frameID_tag 2
#define INU_metadata_IMU_Timestamp_userspace_timestamp_ns_tag 1
#define INU_metadata_IMU_Timestamp_userspace_timestamp_tag 2
#define INU_metadata_IMU_Timestamp_start_imu_timestamp_ns_tag 3
#define INU_metadata_ISP_ExpoParams_integrationTime_tag 1
#define INU_metadata_ISP_ExpoParams_analogGain_tag 2
#define INU_metadata_ISP_ExpoParams_ispGain_tag  3
#define INU_metadata_ISP_ExpoParams_ispAE_tag    4
#define INU_metadata_ISP_ExpoParams_ispAEclosedLoop_tag 5
#define INU_metadata_ISP_ExpoParams_uart_sync_tag 6
#define INU_metadata_ISP_WBPameters_wbGains_tag  1
#define INU_metadata_ISP_WBPameters_colourcorrection_tag 2
#define INU_metadata_ISP_WBPameters_colourcorrectinCoefficients_tag 3
#define INU_metadata_ISP_WBPameters_ispAWB_tag   4
#define INU_metadata_ISP_WBPameters_ispAWBclosedLoop_tag 5
#define INU_metadata_Sensor_side_tag             1
#define INU_metadata_Sensor_sensorType_tag       2
#define INU_metadata_Sensor_sensorID_tag         3
#define INU_metadata_Sensor_channelScale_tag     4
#define INU_metadata_Debug_sensor_update_rx_timing_tag 1
#define INU_metadata_Debug_sensor_updateSOFInterrupt_tag 2
#define INU_metadata_Debug_sensor_update_dequed_timing_tag 3
#define INU_metadata_Debug_sensor_update_i2cWritesComplete_tag 4
#define INU_metadata_Sensor_MetaData_frameCounter_tag 1
#define INU_metadata_Sensor_MetaData_ISO_tag     2
#define INU_metadata_Sensor_MetaData_exposure_tag 3
#define INU_metadata_Sensor_MetaData_gain_tag    4
#define INU_metadata_Sensor_MetaData_Timestamp_tag 5
#define INU_metadata_Sensor_MetaData_AFCropPositon_tag 6
#define INU_metadata_Sensor_MetaData_AFFocusPosition_tag 7
#define INU_metadata_Sensor_MetaData_roi_tag     8
#define INU_metadata_Sensor_MetaData_wb_tag      9
#define INU_metadata_Sensor_MetaData_isp_expo_tag 10
#define INU_metadata_State_timestamp_ns_tag      1
#define INU_metadata_State_sender_tag            2
#define INU_metadata_State_target_tag            3
#define INU_metadata_State_sensor_tag            4
#define INU_metadata_State_sensor_metadata_tag   5
#define INU_metadata_State_man_command_tag       6
#define INU_metadata_State_context_tag           7
#define INU_metadata_State_snsr_update_timing_tag 8
#define INU_metadata_TopLevel_metadatacounter_tag 1
#define INU_metadata_TopLevel_timestamp_ns_tag   2
#define INU_metadata_TopLevel_protocol_version_tag 3
#define INU_metadata_TopLevel_state_tag          4
#define INU_metadata_TopLevel_sender_tag         5
#define INU_metadata_TopLevel_sensors_tag        6
#define INU_metadata_TopLevel_uartDebug_tag      7
#define INU_metadata_TopLevel_imuTimestamp_tag   8
#define INU_metadata_TopLevel_imuBatchInfo_tag   9

/* Struct field encoding specification for nanopb */
#define INU_metadata_Sensor_ID_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   sensorID,          1)
#define INU_metadata_Sensor_ID_CALLBACK NULL
#define INU_metadata_Sensor_ID_DEFAULT NULL

#define INU_metadata_Sensor_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    side,              1) \
X(a, STATIC,   SINGULAR, UENUM,    sensorType,        2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensorID,          3) \
X(a, STATIC,   SINGULAR, UENUM,    channelScale,      4)
#define INU_metadata_Sensor_CALLBACK NULL
#define INU_metadata_Sensor_DEFAULT NULL
#define INU_metadata_Sensor_sensorID_MSGTYPE INU_metadata_Sensor_ID

#define INU_metadata_FrameCounter_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   counter,           1)
#define INU_metadata_FrameCounter_CALLBACK NULL
#define INU_metadata_FrameCounter_DEFAULT NULL

#define INU_metadata_ISO_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ISO,               1)
#define INU_metadata_ISO_CALLBACK NULL
#define INU_metadata_ISO_DEFAULT NULL

#define INU_metadata_Exposure_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   exposure,          1)
#define INU_metadata_Exposure_CALLBACK NULL
#define INU_metadata_Exposure_DEFAULT NULL

#define INU_metadata_Gain_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    analogue_gain,     1) \
X(a, STATIC,   SINGULAR, FLOAT,    digital_gain,      2)
#define INU_metadata_Gain_CALLBACK NULL
#define INU_metadata_Gain_DEFAULT NULL

#define INU_metadata_WhiteBalance_Temperature_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   whitebalance_temperature,   1)
#define INU_metadata_WhiteBalance_Temperature_CALLBACK NULL
#define INU_metadata_WhiteBalance_Temperature_DEFAULT NULL

#define INU_metadata_EVCompensation_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   EVCompensation,    1)
#define INU_metadata_EVCompensation_CALLBACK NULL
#define INU_metadata_EVCompensation_DEFAULT NULL

#define INU_metadata_FlickerCompensation_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   FlickerCompensation,   1)
#define INU_metadata_FlickerCompensation_CALLBACK NULL
#define INU_metadata_FlickerCompensation_DEFAULT NULL

#define INU_metadata_Sharpness_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   Sharpness,         1)
#define INU_metadata_Sharpness_CALLBACK NULL
#define INU_metadata_Sharpness_DEFAULT NULL

#define INU_metadata_NoiseReduction_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   NoiseReduction,    1)
#define INU_metadata_NoiseReduction_CALLBACK NULL
#define INU_metadata_NoiseReduction_DEFAULT NULL

#define INU_metadata_FrameRate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   FrameRate,         1)
#define INU_metadata_FrameRate_CALLBACK NULL
#define INU_metadata_FrameRate_DEFAULT NULL

#define INU_metadata_CCM_In_use_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   CCM_In_use,        1)
#define INU_metadata_CCM_In_use_CALLBACK NULL
#define INU_metadata_CCM_In_use_DEFAULT NULL

#define INU_metadata_AFCropPositon_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   StartX,            1) \
X(a, STATIC,   SINGULAR, UINT32,   StartY,            2)
#define INU_metadata_AFCropPositon_CALLBACK NULL
#define INU_metadata_AFCropPositon_DEFAULT NULL

#define INU_metadata_AFFocusPosition_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    AFFocusPosition,   1)
#define INU_metadata_AFFocusPosition_CALLBACK NULL
#define INU_metadata_AFFocusPosition_DEFAULT NULL

#define INU_metadata_RGBHistogram_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   RGBHistogram,      1)
#define INU_metadata_RGBHistogram_CALLBACK NULL
#define INU_metadata_RGBHistogram_DEFAULT NULL

#define INU_metadata_ContrastValue_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ContrastValue,     1)
#define INU_metadata_ContrastValue_CALLBACK NULL
#define INU_metadata_ContrastValue_DEFAULT NULL

#define INU_metadata_EdgeEnhancement_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   EdgeEnhancement,   1)
#define INU_metadata_EdgeEnhancement_CALLBACK NULL
#define INU_metadata_EdgeEnhancement_DEFAULT NULL

#define INU_metadata_ROI_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   x_start,           1) \
X(a, STATIC,   SINGULAR, UINT32,   y_start,           2)
#define INU_metadata_ROI_CALLBACK NULL
#define INU_metadata_ROI_DEFAULT NULL

#define INU_metadata_ISP_WBGain_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gainR,             1) \
X(a, STATIC,   SINGULAR, FLOAT,    gainGr,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    gainGb,            3) \
X(a, STATIC,   SINGULAR, FLOAT,    gainB,             4)
#define INU_metadata_ISP_WBGain_CALLBACK NULL
#define INU_metadata_ISP_WBGain_DEFAULT NULL

#define INU_metadata_ISP_ColourCorrectionOffset_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    red,               1) \
X(a, STATIC,   SINGULAR, INT32,    green,             2) \
X(a, STATIC,   SINGULAR, INT32,    blue,              3)
#define INU_metadata_ISP_ColourCorrectionOffset_CALLBACK NULL
#define INU_metadata_ISP_ColourCorrectionOffset_DEFAULT NULL

#define INU_metadata_ISP_AWB_closedLoop_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     awb_closedLoop,    1)
#define INU_metadata_ISP_AWB_closedLoop_CALLBACK NULL
#define INU_metadata_ISP_AWB_closedLoop_DEFAULT NULL

#define INU_metadata_ISP_AE_closedLoop_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     ae_closedLoop,     1)
#define INU_metadata_ISP_AE_closedLoop_CALLBACK NULL
#define INU_metadata_ISP_AE_closedLoop_DEFAULT NULL

#define INU_metadata_ISP_ColourCorrectionCoefficient_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, FLOAT,    coeff,             1)
#define INU_metadata_ISP_ColourCorrectionCoefficient_CALLBACK NULL
#define INU_metadata_ISP_ColourCorrectionCoefficient_DEFAULT NULL

#define INU_metadata_ISP_AWB_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     metadataEnableAWB,   4)
#define INU_metadata_ISP_AWB_CALLBACK NULL
#define INU_metadata_ISP_AWB_DEFAULT NULL

#define INU_metadata_ISP_WBPameters_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  wbGains,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  colourcorrection,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  colourcorrectinCoefficients,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ispAWB,            4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ispAWBclosedLoop,   5)
#define INU_metadata_ISP_WBPameters_CALLBACK NULL
#define INU_metadata_ISP_WBPameters_DEFAULT NULL
#define INU_metadata_ISP_WBPameters_wbGains_MSGTYPE INU_metadata_ISP_WBGain
#define INU_metadata_ISP_WBPameters_colourcorrection_MSGTYPE INU_metadata_ISP_ColourCorrectionOffset
#define INU_metadata_ISP_WBPameters_colourcorrectinCoefficients_MSGTYPE INU_metadata_ISP_ColourCorrectionCoefficient
#define INU_metadata_ISP_WBPameters_ispAWB_MSGTYPE INU_metadata_ISP_AWB
#define INU_metadata_ISP_WBPameters_ispAWBclosedLoop_MSGTYPE INU_metadata_ISP_AWB_closedLoop

#define INU_metadata_ISP_AE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     metadataEnableAE,   1)
#define INU_metadata_ISP_AE_CALLBACK NULL
#define INU_metadata_ISP_AE_DEFAULT NULL

#define INU_metadata_ISP_ExpoParams_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    integrationTime,   1) \
X(a, STATIC,   SINGULAR, FLOAT,    analogGain,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    ispGain,           3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ispAE,             4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ispAEclosedLoop,   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  uart_sync,         6)
#define INU_metadata_ISP_ExpoParams_CALLBACK NULL
#define INU_metadata_ISP_ExpoParams_DEFAULT NULL
#define INU_metadata_ISP_ExpoParams_ispAE_MSGTYPE INU_metadata_ISP_AE
#define INU_metadata_ISP_ExpoParams_ispAEclosedLoop_MSGTYPE INU_metadata_ISP_AE_closedLoop
#define INU_metadata_ISP_ExpoParams_uart_sync_MSGTYPE INU_metadata_Command_Sync

#define INU_metadata_Command_Sync_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    slu_number,        1) \
X(a, STATIC,   SINGULAR, BOOL,     wait_for_slu_SOF_Interrupt,   2) \
X(a, STATIC,   SINGULAR, UINT32,   cmd_id,            3) \
X(a, STATIC,   SINGULAR, UINT32,   frameID,           4)
#define INU_metadata_Command_Sync_CALLBACK NULL
#define INU_metadata_Command_Sync_DEFAULT NULL

#define INU_metadata_Sensor_MetaData_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  frameCounter,      1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ISO,               2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  exposure,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  gain,              4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  Timestamp,         5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  AFCropPositon,     6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  AFFocusPosition,   7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  roi,               8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  wb,                9) \
X(a, STATIC,   OPTIONAL, MESSAGE,  isp_expo,         10)
#define INU_metadata_Sensor_MetaData_CALLBACK NULL
#define INU_metadata_Sensor_MetaData_DEFAULT NULL
#define INU_metadata_Sensor_MetaData_frameCounter_MSGTYPE INU_metadata_FrameCounter
#define INU_metadata_Sensor_MetaData_ISO_MSGTYPE INU_metadata_ISO
#define INU_metadata_Sensor_MetaData_exposure_MSGTYPE INU_metadata_Exposure
#define INU_metadata_Sensor_MetaData_gain_MSGTYPE INU_metadata_Gain
#define INU_metadata_Sensor_MetaData_Timestamp_MSGTYPE INU_metadata_Timestamp
#define INU_metadata_Sensor_MetaData_AFCropPositon_MSGTYPE INU_metadata_AFCropPositon
#define INU_metadata_Sensor_MetaData_AFFocusPosition_MSGTYPE INU_metadata_AFFocusPosition
#define INU_metadata_Sensor_MetaData_roi_MSGTYPE INU_metadata_ROI
#define INU_metadata_Sensor_MetaData_wb_MSGTYPE INU_metadata_ISP_WBPameters
#define INU_metadata_Sensor_MetaData_isp_expo_MSGTYPE INU_metadata_ISP_ExpoParams

#define INU_metadata_Manual_Sensor_Command_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    cmd_type,          1) \
X(a, STATIC,   SINGULAR, UINT32,   register_address,   2) \
X(a, STATIC,   SINGULAR, FIXED_LENGTH_BYTES, register_data,     3) \
X(a, STATIC,   SINGULAR, UINT32,   frame_delays,      4)
#define INU_metadata_Manual_Sensor_Command_CALLBACK NULL
#define INU_metadata_Manual_Sensor_Command_DEFAULT NULL

#define INU_metadata_Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   nanoseconds,       1)
#define INU_metadata_Timestamp_CALLBACK NULL
#define INU_metadata_Timestamp_DEFAULT NULL

#define INU_metadata_FrameID_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   frameID,           1)
#define INU_metadata_FrameID_CALLBACK NULL
#define INU_metadata_FrameID_DEFAULT NULL

#define INU_metadata_Debug_Timing_Information_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  frameID,           2)
#define INU_metadata_Debug_Timing_Information_CALLBACK NULL
#define INU_metadata_Debug_Timing_Information_DEFAULT NULL
#define INU_metadata_Debug_Timing_Information_timestamp_MSGTYPE INU_metadata_Timestamp
#define INU_metadata_Debug_Timing_Information_frameID_MSGTYPE INU_metadata_FrameID

#define INU_metadata_Debug_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_update_rx_timing,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_updateSOFInterrupt,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_update_dequed_timing,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_update_i2cWritesComplete,   4)
#define INU_metadata_Debug_CALLBACK NULL
#define INU_metadata_Debug_DEFAULT NULL
#define INU_metadata_Debug_sensor_update_rx_timing_MSGTYPE INU_metadata_Debug_Timing_Information
#define INU_metadata_Debug_sensor_updateSOFInterrupt_MSGTYPE INU_metadata_Debug_Timing_Information
#define INU_metadata_Debug_sensor_update_dequed_timing_MSGTYPE INU_metadata_Debug_Timing_Information
#define INU_metadata_Debug_sensor_update_i2cWritesComplete_MSGTYPE INU_metadata_Debug_Timing_Information

#define INU_metadata_State_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp_ns,      1) \
X(a, STATIC,   SINGULAR, UENUM,    sender,            2) \
X(a, STATIC,   SINGULAR, UENUM,    target,            3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor,            4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_metadata,   5) \
X(a, STATIC,   REPEATED, MESSAGE,  man_command,       6) \
X(a, STATIC,   SINGULAR, UENUM,    context,           7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  snsr_update_timing,   8)
#define INU_metadata_State_CALLBACK NULL
#define INU_metadata_State_DEFAULT NULL
#define INU_metadata_State_timestamp_ns_MSGTYPE INU_metadata_Timestamp
#define INU_metadata_State_sensor_MSGTYPE INU_metadata_Sensor
#define INU_metadata_State_sensor_metadata_MSGTYPE INU_metadata_Sensor_MetaData
#define INU_metadata_State_man_command_MSGTYPE INU_metadata_Manual_Sensor_Command
#define INU_metadata_State_snsr_update_timing_MSGTYPE INU_metadata_Debug

#define INU_metadata_TopLevel_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   metadatacounter,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  timestamp_ns,      2) \
X(a, STATIC,   SINGULAR, UINT32,   protocol_version,   3) \
X(a, STATIC,   REPEATED, MESSAGE,  state,             4) \
X(a, STATIC,   SINGULAR, UENUM,    sender,            5) \
X(a, STATIC,   REPEATED, MESSAGE,  sensors,           6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  uartDebug,         7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  imuTimestamp,      8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  imuBatchInfo,      9)
#define INU_metadata_TopLevel_CALLBACK NULL
#define INU_metadata_TopLevel_DEFAULT NULL
#define INU_metadata_TopLevel_timestamp_ns_MSGTYPE INU_metadata_Timestamp
#define INU_metadata_TopLevel_state_MSGTYPE INU_metadata_State
#define INU_metadata_TopLevel_sensors_MSGTYPE INU_metadata_Sensor
#define INU_metadata_TopLevel_uartDebug_MSGTYPE INU_metadata_UART_Debug
#define INU_metadata_TopLevel_imuTimestamp_MSGTYPE INU_metadata_IMU_Timestamp
#define INU_metadata_TopLevel_imuBatchInfo_MSGTYPE INU_metadata_IMU_Batching

#define INU_metadata_UART_Debug_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   rxCounter,         1) \
X(a, STATIC,   SINGULAR, UINT64,   txCounter,         2) \
X(a, STATIC,   SINGULAR, UINT64,   txTransmitTime_ns,   3) \
X(a, STATIC,   SINGULAR, UINT64,   crcErrors,         4) \
X(a, STATIC,   SINGULAR, UINT64,   lastSyncPacketTimestamp_us,   5)
#define INU_metadata_UART_Debug_CALLBACK NULL
#define INU_metadata_UART_Debug_DEFAULT NULL

#define INU_metadata_IMU_Batching_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    batchingMethod,    1)
#define INU_metadata_IMU_Batching_CALLBACK NULL
#define INU_metadata_IMU_Batching_DEFAULT NULL

#define INU_metadata_IMU_Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   userspace_timestamp_ns,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  userspace_timestamp,   2) \
X(a, STATIC,   SINGULAR, UINT64,   start_imu_timestamp_ns,   3)
#define INU_metadata_IMU_Timestamp_CALLBACK NULL
#define INU_metadata_IMU_Timestamp_DEFAULT NULL
#define INU_metadata_IMU_Timestamp_userspace_timestamp_MSGTYPE INU_metadata_RTC_Timestamp

#define INU_metadata_RTC_Timestamp_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   seconds,           1) \
X(a, STATIC,   SINGULAR, UINT32,   fracSeconds,       2)
#define INU_metadata_RTC_Timestamp_CALLBACK NULL
#define INU_metadata_RTC_Timestamp_DEFAULT NULL

extern const pb_msgdesc_t INU_metadata_Sensor_ID_msg;
extern const pb_msgdesc_t INU_metadata_Sensor_msg;
extern const pb_msgdesc_t INU_metadata_FrameCounter_msg;
extern const pb_msgdesc_t INU_metadata_ISO_msg;
extern const pb_msgdesc_t INU_metadata_Exposure_msg;
extern const pb_msgdesc_t INU_metadata_Gain_msg;
extern const pb_msgdesc_t INU_metadata_WhiteBalance_Temperature_msg;
extern const pb_msgdesc_t INU_metadata_EVCompensation_msg;
extern const pb_msgdesc_t INU_metadata_FlickerCompensation_msg;
extern const pb_msgdesc_t INU_metadata_Sharpness_msg;
extern const pb_msgdesc_t INU_metadata_NoiseReduction_msg;
extern const pb_msgdesc_t INU_metadata_FrameRate_msg;
extern const pb_msgdesc_t INU_metadata_CCM_In_use_msg;
extern const pb_msgdesc_t INU_metadata_AFCropPositon_msg;
extern const pb_msgdesc_t INU_metadata_AFFocusPosition_msg;
extern const pb_msgdesc_t INU_metadata_RGBHistogram_msg;
extern const pb_msgdesc_t INU_metadata_ContrastValue_msg;
extern const pb_msgdesc_t INU_metadata_EdgeEnhancement_msg;
extern const pb_msgdesc_t INU_metadata_ROI_msg;
extern const pb_msgdesc_t INU_metadata_ISP_WBGain_msg;
extern const pb_msgdesc_t INU_metadata_ISP_ColourCorrectionOffset_msg;
extern const pb_msgdesc_t INU_metadata_ISP_AWB_closedLoop_msg;
extern const pb_msgdesc_t INU_metadata_ISP_AE_closedLoop_msg;
extern const pb_msgdesc_t INU_metadata_ISP_ColourCorrectionCoefficient_msg;
extern const pb_msgdesc_t INU_metadata_ISP_AWB_msg;
extern const pb_msgdesc_t INU_metadata_ISP_WBPameters_msg;
extern const pb_msgdesc_t INU_metadata_ISP_AE_msg;
extern const pb_msgdesc_t INU_metadata_ISP_ExpoParams_msg;
extern const pb_msgdesc_t INU_metadata_Command_Sync_msg;
extern const pb_msgdesc_t INU_metadata_Sensor_MetaData_msg;
extern const pb_msgdesc_t INU_metadata_Manual_Sensor_Command_msg;
extern const pb_msgdesc_t INU_metadata_Timestamp_msg;
extern const pb_msgdesc_t INU_metadata_FrameID_msg;
extern const pb_msgdesc_t INU_metadata_Debug_Timing_Information_msg;
extern const pb_msgdesc_t INU_metadata_Debug_msg;
extern const pb_msgdesc_t INU_metadata_State_msg;
extern const pb_msgdesc_t INU_metadata_TopLevel_msg;
extern const pb_msgdesc_t INU_metadata_UART_Debug_msg;
extern const pb_msgdesc_t INU_metadata_IMU_Batching_msg;
extern const pb_msgdesc_t INU_metadata_IMU_Timestamp_msg;
extern const pb_msgdesc_t INU_metadata_RTC_Timestamp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define INU_metadata_Sensor_ID_fields &INU_metadata_Sensor_ID_msg
#define INU_metadata_Sensor_fields &INU_metadata_Sensor_msg
#define INU_metadata_FrameCounter_fields &INU_metadata_FrameCounter_msg
#define INU_metadata_ISO_fields &INU_metadata_ISO_msg
#define INU_metadata_Exposure_fields &INU_metadata_Exposure_msg
#define INU_metadata_Gain_fields &INU_metadata_Gain_msg
#define INU_metadata_WhiteBalance_Temperature_fields &INU_metadata_WhiteBalance_Temperature_msg
#define INU_metadata_EVCompensation_fields &INU_metadata_EVCompensation_msg
#define INU_metadata_FlickerCompensation_fields &INU_metadata_FlickerCompensation_msg
#define INU_metadata_Sharpness_fields &INU_metadata_Sharpness_msg
#define INU_metadata_NoiseReduction_fields &INU_metadata_NoiseReduction_msg
#define INU_metadata_FrameRate_fields &INU_metadata_FrameRate_msg
#define INU_metadata_CCM_In_use_fields &INU_metadata_CCM_In_use_msg
#define INU_metadata_AFCropPositon_fields &INU_metadata_AFCropPositon_msg
#define INU_metadata_AFFocusPosition_fields &INU_metadata_AFFocusPosition_msg
#define INU_metadata_RGBHistogram_fields &INU_metadata_RGBHistogram_msg
#define INU_metadata_ContrastValue_fields &INU_metadata_ContrastValue_msg
#define INU_metadata_EdgeEnhancement_fields &INU_metadata_EdgeEnhancement_msg
#define INU_metadata_ROI_fields &INU_metadata_ROI_msg
#define INU_metadata_ISP_WBGain_fields &INU_metadata_ISP_WBGain_msg
#define INU_metadata_ISP_ColourCorrectionOffset_fields &INU_metadata_ISP_ColourCorrectionOffset_msg
#define INU_metadata_ISP_AWB_closedLoop_fields &INU_metadata_ISP_AWB_closedLoop_msg
#define INU_metadata_ISP_AE_closedLoop_fields &INU_metadata_ISP_AE_closedLoop_msg
#define INU_metadata_ISP_ColourCorrectionCoefficient_fields &INU_metadata_ISP_ColourCorrectionCoefficient_msg
#define INU_metadata_ISP_AWB_fields &INU_metadata_ISP_AWB_msg
#define INU_metadata_ISP_WBPameters_fields &INU_metadata_ISP_WBPameters_msg
#define INU_metadata_ISP_AE_fields &INU_metadata_ISP_AE_msg
#define INU_metadata_ISP_ExpoParams_fields &INU_metadata_ISP_ExpoParams_msg
#define INU_metadata_Command_Sync_fields &INU_metadata_Command_Sync_msg
#define INU_metadata_Sensor_MetaData_fields &INU_metadata_Sensor_MetaData_msg
#define INU_metadata_Manual_Sensor_Command_fields &INU_metadata_Manual_Sensor_Command_msg
#define INU_metadata_Timestamp_fields &INU_metadata_Timestamp_msg
#define INU_metadata_FrameID_fields &INU_metadata_FrameID_msg
#define INU_metadata_Debug_Timing_Information_fields &INU_metadata_Debug_Timing_Information_msg
#define INU_metadata_Debug_fields &INU_metadata_Debug_msg
#define INU_metadata_State_fields &INU_metadata_State_msg
#define INU_metadata_TopLevel_fields &INU_metadata_TopLevel_msg
#define INU_metadata_UART_Debug_fields &INU_metadata_UART_Debug_msg
#define INU_metadata_IMU_Batching_fields &INU_metadata_IMU_Batching_msg
#define INU_metadata_IMU_Timestamp_fields &INU_metadata_IMU_Timestamp_msg
#define INU_metadata_RTC_Timestamp_fields &INU_metadata_RTC_Timestamp_msg

/* Maximum encoded size of messages (where known) */
#define INU_metadata_AFCropPositon_size          12
#define INU_metadata_AFFocusPosition_size        11
#define INU_metadata_CCM_In_use_size             6
#define INU_metadata_Command_Sync_size           16
#define INU_metadata_ContrastValue_size          6
#define INU_metadata_Debug_Timing_Information_size 21
#define INU_metadata_Debug_size                  92
#define INU_metadata_EVCompensation_size         6
#define INU_metadata_EdgeEnhancement_size        6
#define INU_metadata_Exposure_size               6
#define INU_metadata_FlickerCompensation_size    6
#define INU_metadata_FrameCounter_size           11
#define INU_metadata_FrameID_size                6
#define INU_metadata_FrameRate_size              6
#define INU_metadata_Gain_size                   10
#define INU_metadata_IMU_Batching_size           2
#define INU_metadata_IMU_Timestamp_size          36
#define INU_metadata_ISO_size                    6
#define INU_metadata_ISP_AE_closedLoop_size      2
#define INU_metadata_ISP_AE_size                 2
#define INU_metadata_ISP_AWB_closedLoop_size     2
#define INU_metadata_ISP_AWB_size                2
#define INU_metadata_ISP_ColourCorrectionCoefficient_size 45
#define INU_metadata_ISP_ColourCorrectionOffset_size 33
#define INU_metadata_ISP_ExpoParams_size         41
#define INU_metadata_ISP_WBGain_size             20
#define INU_metadata_ISP_WBPameters_size         112
#define INU_metadata_Manual_Sensor_Command_size  18
#define INU_metadata_NoiseReduction_size         6
#define INU_metadata_RGBHistogram_size           6
#define INU_metadata_ROI_size                    12
#define INU_metadata_RTC_Timestamp_size          12
#define INU_metadata_Sensor_ID_size              6
#define INU_metadata_Sensor_MetaData_size        252
#define INU_metadata_Sensor_size                 14
#define INU_metadata_Sharpness_size              6
#define INU_metadata_State_size                  405
#define INU_metadata_Timestamp_size              11
#define INU_metadata_TopLevel_size               1795
#define INU_metadata_UART_Debug_size             55
#define INU_metadata_WhiteBalance_Temperature_size 6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
